@model IEnumerable<TAT001.Entities.DOCUMENTO>
@*@model TAT001.Entities.DOCUMENTO*@


@{
    //ViewBag.Title = "Páginas";
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.pagina_r = 1100;
    ViewBag.carpeta_r = 1103;
    List<Tuple<decimal, decimal>> negAmount = new List<Tuple<decimal, decimal>>();
}
@if (!ViewBag.display)
{
    <script>

        $(document).ready(function () {



            $('select.select_all').siblings('ul').prepend("<li id=sm_select_all><span id='filters_all'>Todas las Opciones</span></li>");
            $('li#sm_select_all').on('click', function () {
                var jq_elem = $(this),
                    jq_elem_span = jq_elem.find('span'),
                    select_all = jq_elem_span.text() == 'Todas las Opciones',
                    set_text = select_all ? 'Borrar Selección' : 'Todas las Opciones';
                jq_elem_span.text(set_text);
                jq_elem.siblings('li').filter(function () {
                    return $(this).find('input').prop('checked') != select_all;
                }).click();
            });

        });





    </script>
}

@using (Html.BeginForm("ReporteIntegracionTs", "Reportes", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    System.Globalization.TextInfo myTI = new System.Globalization.CultureInfo("en-US", false).TextInfo;
    System.Globalization.DateTimeFormatInfo formatoFecha = System.Globalization.CultureInfo.CurrentCulture.DateTimeFormat;
    DateTime newDate = DateTime.Now;
    int yeard = newDate.Year;
    int year1 = yeard + 1;
    int year2 = yeard + 2;
    int yearback = yeard - 1;
    int yearback2 = yeard - 2;
    var baseurl = HttpContext.Current.Request;
    <div class="row">

        @if (ViewBag.Display)
        {
            <div class="col s12 right-align" id="senddiv">
                <button class="btn waves-effect waves-light" type="submit" name="action" id="sendbtn">
                    Consultar
                </button>
                <a class="waves-effect waves-light btn" id="excelBtn" download>Generar Excel</a>
            </div>
        }
        else
        {
            <div class="input-field col s12 right-align" id="senddiv">
                <button class="btn waves-effect waves-light" type="submit" name="action" id="sendbtn">
                    Consultar
                </button>
            </div>
        }
    </div>
    <div class="card-panel">
        <div class="row">
            <div class="row" style="margin-bottom:0;">
                <div class="input-field col s3 m3 l3">
                    <select multiple name="selectcocode" id="selectcocode" required="" class="comcode select_all">
                        @try
                        {
                            foreach (var item in ViewBag.sociedad)
                            {
                                <option value="@item.BUKRS">@item.BUKRS</option>
                            }
                        }
                        catch (Exception)
                        {
                            <option value="" id="no_opt">No hay opciones</option>
                        }


                    </select>
                    <label id="label_cocode">Co. Code</label>
                </div>
                <div class="input-field col s3 m3 l3">
                    <select multiple name="selectaccount" id="selectaccount" required="" class="select_all">

                        @try
                        {
                            foreach (var id in ViewBag.cuentagl)
                            {
                                <option value="@id.ID">@id.ID @id.NOMBRE</option>
                            }
                        }
                        catch (Exception)
                        {
                            <option value="" id="no_optbal">No hay opciones</option>

                        }

                    </select>

                    <label id="label_account">Cuenta de Balance</label>
                </div>
                <div class="input-field col s3 m3 l3">
                    <select name="selectperiod" id="selectperiod" required="">

                        @try
                        {
                            foreach (var periodo in ViewBag.periodo)
                            {
                                var concat = "P";
                                if (Int32.Parse(periodo.ACTIVO) == 1)
                                {
                                    Console.Write(periodo.ACTIVO);
                                    <option value="@periodo.ID">@(concat + periodo.ID)</option>

                                }
                                else { }
                            }

                        }
                        catch (Exception)
                        {
                            <option value="" id="no_optper">No hay opciones</option>
                        }
                    </select>
                    <label id="label_period">Periodo</label>
                </div>
                <div class="input-field col s3 m3 l3">
                    <select name="selectyear" id="selectyear" required="">
                        @if (yeard == 2018)
                        {

                            <option value="@yeard">@yeard</option>
                            <option value="@year1">@year1</option>
                            <option value="@year2">@year2</option>
                        }
                        else
                        {
                            <option value="@yearback2">@yearback2</option>
                            <option value="@yearback">@yearback</option>
                            <option value="@yeard">@yeard</option>
                        }
                    </select>
                    <label id="label_yr">Año</label>
                </div>


            </div>
        </div>
        <script>
            var elem = document.querySelectorAll('select');
            var options = [];
            var instance = M.FormSelect.init(elem, options);
        </script>
        <script src="//code.jquery.com/jquery-1.12.4.js"></script>
        <script src="//code.jquery.com/jquery-2.0.3.min.js"></script>
        <script src="//cdn.datatables.net/1.10.16/js/jquery.dataTables.min.js"></script>
        <script src="//cdn.datatables.net/1.10.16/js/dataTables.material.min.js"></script>
        <link href="~/Content/dataTable.css" rel="stylesheet" />
        <link href="//cdn.datatables.net/1.10.16/css/dataTables.material.min.css" rel="stylesheet" />
        <link href="~/Scripts/subfilters/jquery.tablesorter.pager.css" rel="stylesheet" />
        <script src="~/Scripts/subfilters/jquery.tablesorter.js"></script>
        <script src="~/Scripts/subfilters/jquery.tablesorter.pager.js"></script>
        <script src="~/Scripts/subfilters/widget-filter.js"></script>


        <script>
            var elem = document.querySelector('select');
            var options = [];
            var instance = M.FormSelect.init(elem, options);
        </script>

    </div>
    if (ViewBag.display)
    {
        <script>

            $(document).ready(function () {
                $("#excelBtn").click(function () {
                    $('#table').trigger('destroyPager');
                    $('#table').trigger('destroy');
                    var pager = $('#table tfoot').html();
                    $('#table tfoot').html("");
                    //tableToExcel('table', 'IntegraciónTS');
                    $('#table tfoot').html(pager);
                    $('#table').tablesorter({
                        theme: "materialize",
                        widthFixed: true,
                        widgets: ["filter", "zebra"],
                        widgetOptions: {
                            zebra: ["even", "odd"],
                            filter_reset: ".reset",
                            filter_cssFilter: ["", "", "browser-default"]
                        }
                    }).tablesorterPager({
                        container: $(".ts-pager"),
                        cssGoto: ".pagenum",
                        removeRows: true,
                        output: '{startRow} - {endRow} / {filteredRows} ({totalRows})'
                    });
                });
                $(".grid thead td").click(function () {
                    showFilterOption(this);
                });



                    @*var table = $('#table').DataTable({
                        //"ajax": 'ViewBag.documentos.Data[0]',
                        //paging: false,
                        //searching: false
                        //stateSave: true,
                        scrollX: "50vh",
                        scrollY: "50vh",
                        scrollCollapse: true,
                        //language: {
                        //    lengthMenu: "Display MENU records per page",
                        //    zeroRecords: "No se encontraron datos",
                        //    info: "Página PAGE de _PAGES_",
                        //    infoEmpty: "No hay datos",
                        //    infoFiltered: "(Filtrado de MAX líneas totales)",
                        //    search: "Buscar"
                        //},
                        order: [[4, "desc"], [5, "desc"], [1, "desc"]],
                        language: {
                            //"url": "//cdn.datatables.net/plug-ins/9dcbecd42ad/i18n/Spanish.json"
                            "url": "../Scripts/lang/@Session["spras"].ToString()" + ".json"
                        },
                        columnDefs: [
                            {
                                targets: [2, 3, 4, 5, 7, 9],
                                className: 'mdl-data-table__cell--non-numeric'
                            }
                        ],
                        initComplete: function () {
                            this.api().columns().every(function () {
                                var column = this;
                                //var div = $('<div class="inputa-field col s12">').appendTo($(column.footer()).empty());
                                var select = $('<select style="display:initial;" class="browser-default"><option value=""></option></select>')
                                    //var select = $('<select ><option value=""></option></select>')
                                    //.appendTo($(div))
                                    .appendTo($(column.footer()).empty())
                                    .on('change', function () {
                                        var val = $.fn.dataTable.util.escapeRegex(

                                            $(this).val()
                                        )
                                            ;

                                        column
                                            .search(val ? '^' + val + '$' : '', true, false)
                                            .draw();
                                    });

                                //column.data().unique().sort().each(function (d, j) {
                                column.cells('', column[0]).render('display').sort().unique().each(function (d, j) {
                                    //select.append('<option value="' + d + '">' + d + '</option>')
                                    var val = $('<div/>').html(d).text();
                                    select.append('<option value="' + val + '">' + val + '</option>');
                                });
                                //var scr = div.append('<script>var elem = document.querySelectorAll("select");var instance = M.Select.init(elem, []);');
                            });
                        }
                    });*@

                //var a = $('#selecc').val();
                //table.page.len(a).draw();
                //$('#selecc').on('change', function () {
                //    table.page.len(this.value).draw();
                //});

                //$('input.global_filter').on('keyup click', function () {
                //    filterGlobal();
                //});

                //$('#table tbody').on('click', 'td.details-control', function () {
                //    var tr = $(this).closest('tr');
                //    var row = table.row(tr);

                //    if (row.child.isShown()) {
                //        // This row is already open - close it
                //        row.child.hide();
                //        tr.removeClass('shown');
                //    }
                //    else {
                //        // Open this row
                //        var child = format(row.data(), row, tr);
                //        if (child != undefined) {
                //        }
                //    }
                //});

                $('select.select_all').siblings('ul').prepend('<li id=sm_select_all id="filters_all"><span>Todas Las Opciones</span></li>');
                $('li#sm_select_all').on('click', function () {
                    var jq_elem = $(this),
                        jq_elem_span = jq_elem.find('span'),
                        select_all = jq_elem_span.text() == 'Todas Las Opciones',
                        set_text = select_all ? 'Borrar Selección' : 'Todas Las Opciones';
                    jq_elem_span.text(set_text);
                    jq_elem.siblings('li').filter(function () {
                        return $(this).find('input').prop('checked') != select_all;
                    }).click();
                });
                $("#excelBtn").click(function () {

                    $('#table').trigger('destroyPager');
                    $('#table').parent().append('<table id="tableClon" style="display:none;border:2px;"><thead id="headclon"></thead><tbody id="bodyclon"></tbody></table>');

                    $('#table > thead > tr').each(function (index) {
                        if (index === 0) {
                        $('#headclon').append('<tr id="headc"></tr>');
                            $(this).children().each(function (indexch) {
                                var thead = $(this).text();
                            $('#headc').append('<th>' + thead + '</th>');
                         });
                        }
                    });
                    $('#table > tbody > tr').each(function (indexb) {
                        $('#bodyclon').append('<tr id="b' + indexb + '"></tr>');
                        $(this).children().each(function (indextd) {
                            var btext = $(this).text();
                            if (indextd == 3) {
                                console.log("num doc: " + $(this).html());
                                btext = $(this).html();
                            }
                            $('#b' + indexb).append('<td style="border: 2px solid black;">' + btext +'</td>');
                        });
                    });
                    var tableid = table;
                    //getting values of current time for generating the file name
                    var dt = new Date();
                    var day = dt.getDate();
                    var month = dt.getMonth() + 1;
                    var year = dt.getFullYear();
                    var hour = dt.getHours();
                    var mins = dt.getMinutes();
                var postfix = day + "" + month + "" + year + "-" + hour + "" +mins;
                    //creating a temporary HTML link element (they support setting file names)
                    var a = document.createElement('a');
                    //getting data from our div that contains the HTML table
                    var data_type = 'data:application/vnd.ms-excel;charset=UTF-8';
                    var table_div = document.getElementById('tableClon');
                    var table_html = table_div.outerHTML.replace(/ /g, '%20');
                    while (table_html.indexOf('á') != -1) table_html = table_html.replace("á", "&aacute;");
                    while (table_html.indexOf('é') != -1) table_html = table_html.replace("é", "&eacute;");
                    while (table_html.indexOf('í') != -1) table_html = table_html.replace("í", "&iacute;");
                    while (table_html.indexOf('ó') != -1) table_html = table_html.replace("ó", "&oacute;");
                    while (table_html.indexOf('ú') != -1) table_html = table_html.replace("ú", "&uacute;");
                    while (table_html.indexOf('ü') != -1) table_html = table_html.replace("ü", "&uuml;");
                    a.href = data_type + ', ' + table_html.replace("ó", "&oacute;").replace("ú", "&uacute;");
                    //setting the file name
                    a.download = 'IntegraciónTS' + postfix + '.xls';
                    //triggering the function
                    a.click();
                    //just in case, prevent default behaviour
                    e.preventDefault();

                location.refresh();
            });
            });
            //var tableToExcel = (function () {
            //    var uri = 'data:application/vnd.ms-excel;base64,'
            //        , template = '<html xmlns:o="urn:schemas-microsoft-com:office:office" xmlns:x="urn:schemas-microsoft-com:office:excel" xmlns="http://www.w3.org/TR/REC-html40"><meta http-equiv="content-type" content="application/vnd.ms-excel; charset=UTF-8"><head><!--[if gte mso 9]><xml><x:ExcelWorkbook><x:ExcelWorksheets><x:ExcelWorksheet><x:Name>{IntegraciónTS' + Date()+'}</x:Name><x:WorksheetOptions><x:DisplayGridlines/></x:WorksheetOptions></x:ExcelWorksheet></x:ExcelWorksheets></x:ExcelWorkbook></xml><![endif]--></head><body><table>{table}</table></body></html>'
            //        , base64 = function (s) { return window.btoa(unescape(encodeURIComponent(s))) }
            //        , format = function (s, c) { return s.replace(/{(\w+)}/g, function (m, p) { return c[p]; }) }
            //    return function (table, name) {
            //        if (!table.nodeType) table = document.getElementById(table)
            //        var ctx = { worksheet: name || 'IntegraciónTS' + Date(), table: table.innerHTML }
            //        window.location.href = uri + base64(format(template, ctx))
            //    }
            //})()




        $(function () {

            $("table").tablesorter({
                theme: "materialize",

                widthFixed: true,
                // widget code contained in the jquery.tablesorter.widgets.js file
                // use the zebra stripe widget if you plan on hiding any rows (filter widget)
                widgets: ["filter", "zebra"],

                widgetOptions: {
                    // using the default zebra striping class name, so it actually isn't included in the theme variable above
                    // this is ONLY needed for materialize theming if you are using the filter widget, because rows are hidden
                    zebra: ["even", "odd"],

                    // reset filters button
                    filter_reset: ".reset",

                    // extra css class name (string or array) added to the filter element (input or select)
                    // select needs a "browser-default" class or it gets hidden
                    filter_cssFilter: ["", "", "browser-default"]
                }
            })
                .tablesorterPager({

                    // target the pager markup - see the HTML block below
                    container: $(".ts-pager"),

                    // target the pager page select dropdown - choose a page
                    cssGoto: ".pagenum",

                    // remove rows from the table to speed up the sort of large tables.
                    // setting this to false, only hides the non-visible rows; needed if you plan to add/remove rows with the pager enabled.
                    removeRows: true,

                    // output string - default is '{page}/{totalPages}';
                    // possible variables: {page}, {totalPages}, {filteredPages}, {startRow}, {endRow}, {filteredRows} and {totalRows}
                    output: '{startRow} - {endRow} / {filteredRows} ({totalRows})'

                });

        });
        </script>
        <div style="width:100%;height:50vh;overflow:scroll;">
            <table class="table mdl-data-table striped grid centered table" id="table" style="width:100%;">
                <thead>
                    <tr>
                        <th class="filter-select" data-placeholder="Todas las opciones" id="headcta_bal">Cuenta de Balance</th>
                        <th class="filter-select" data-placeholder="Todas las opciones" id="headreg_cont">Fecha Registro Contable</th>
                        <th class="filter-select" data-placeholder="Todas las opciones" id="headfecha_ven">Fecha Vencimiento</th>
                        <th class="filter-select" data-placeholder="Todas las opciones" id="headnum_tat">Número solicitud de la Provisión TAT 2.0</th>
                        <th class="filter-select" data-placeholder="Todas las opciones" id="headnum_sap">Número de registro contable SAP</th>
                        <th class="filter-select" data-placeholder="Todas las opciones" id="head_concept">Concepto</th>
                        <th class="filter-select" data-placeholder="Todas las opciones" id="headcomm_seg">Comentarios de seguimiento</th>
                        <th class="filter-select" data-placeholder="Todas las opciones" id="headprov_sal">Saldo de la provisión</th>
                        <th class="filter-select" data-placeholder="Todas las opciones" id="headimp_gas">Impacto al gasto </th>
                        <th class="filter-select" data-placeholder="Todas las opciones" id="headglobal_idus">Global ID Usuario CD</th>
                        <th class="filter-select" data-placeholder="Todas las opciones" id="headglobal_idman">Global ID Manager CD</th>
                        <th class="filter-select" data-placeholder="Todas las opciones" id="head_ant">Antigüedad (días)</th>
                    </tr>
                </thead>
                <tfoot>
                    <tr>
                        <th class="filter-select" data-placeholder="Todas las opciones" id="headcta_bal">Cuenta de Balance</th>
                        <th class="filter-select" data-placeholder="Todas las opciones" id="headreg_cont">Fecha Registro Contable</th>
                        <th class="filter-select" data-placeholder="Todas las opciones" id="headfecha_ven">Fecha Vencimiento</th>
                        <th class="filter-select" data-placeholder="Todas las opciones" id="headnum_tat">Número solicitud de la Provisión ICON</th>
                        <th class="filter-select" data-placeholder="Todas las opciones" id="headnum_sap">Número de registro contable SAP</th>
                        <th class="filter-select" data-placeholder="Todas las opciones" id="head_concept">Concepto</th>
                        <th class="filter-select" data-placeholder="Todas las opciones" id="headcomm_seg">Comentarios de seguimiento</th>
                        <th class="filter-select" data-placeholder="Todas las opciones" id="headprov_sal">Saldo de la provisión</th>
                        <th class="filter-select" data-placeholder="Todas las opciones" id="headimp_gas">Impacto al gasto </th>
                        <th class="filter-select" data-placeholder="Todas las opciones" id="headglobal_idus">Global ID Usuario CD</th>
                        <th class="filter-select" data-placeholder="Todas las opciones" id="headglobal_idman">Global ID Manager CD</th>
                        <th class="filter-select" data-placeholder="Todas las opciones" id="head_ant">Antigüedad (días)</th>
                    </tr>
                    <!-- include "tablesorter-ignoreRow" class for pager rows in thead -->
                    <tr class="tablesorter-ignoreRow">
                        <th colspan="2" class="ts-pager form-horizontal">
                            <button type="button" class="btn first"><i class="small material-icons">first_page</i></button>
                            <button type="button" class="btn prev"><i class="small material-icons">navigate_before</i></button>
                            <span class="pagedisplay"></span>
                            <!-- this can be any element, including an input -->
                            <button type="button" class="btn next"><i class="small material-icons">navigate_next</i></button>
                            <button type="button" class="btn last"><i class="small material-icons">last_page</i></button>
                            <div style="padding:0 78% 0 0;">
                                <label class="btn_length" id="por_pag">Ver por página</label>
                                <select class="pagesize" id="selecc" title="Select page size">
                                    <option selected="selected" value="10">10</option>
                                    <option value="20">20</option>
                                    <option value="30">30</option>
                                    <option value="40">40</option>
                                    <option value="50">50</option>
                                </select>
                                <label class="label_pag">Ir a Página</label>
                                <select class="pagenum browser-default" title="Select page number"></select>
                            </div>
                        </th>
                        <th colspan="12">


                        </th>

                    </tr>
                </tfoot>
                <tbody>
                    @*@for (var i = 0; i < ViewBag.Consulta.Length; i++)
                        {
                            <tr>
                                <td>
                                    @ViewBag.Consulta[i];
                                <td>
                            </tr>
                        }*@


                    @foreach (var obj in ViewBag.Consulta2)
                    {

                        int index = ViewBag.Consulta2.IndexOf(obj);
                        //var nombreCuenta = item.ID + "-" + item.NOMBRE;
                        foreach (var item in obj)
                        {
                            int periodo = item.GetType().GetProperty("PERIODO").GetValue(item, null);
                            int ejercicio = Int32.Parse(item.GetType().GetProperty("EJERCICIO").GetValue(item, null));
                            int antiguedad = ViewBag.Calendario.getUltimoDiaNum(ejercicio, periodo);
                            var amountParent = item.GetType().GetProperty("MONTO_DOC_MD").GetValue(item, null);
                            int fechaSap = 0;
                            DateTime registro = new DateTime();
                            //////
                            if (item.GetType().GetProperty("FECHAC").GetValue(item, null) != null)
                            {
                                registro = item.GetType().GetProperty("FECHAC").GetValue(item, null);
                                //registro = ViewBag.Calendario.fechaAint(item.GetType().GetProperty("FECHAC").GetValue(item, null));
                            }
                            //var registro = item.GetType().GetProperty("FECHAC").GetValue(item, null);

                            int ejercicio2 = Int32.Parse(item.GetType().GetProperty("EJERCICIO").GetValue(item, null));
                            int periodo2 = Int32.Parse(item.GetType().GetProperty("PERIODO").GetValue(item, null).ToString());
                            TAT001.Services.Calendario445 c2 = new TAT001.Services.Calendario445();
                            c2.getUltimoDia(ejercicio2, periodo2);

                            var cierre = c2.getUltimoDia(ejercicio2, periodo2);

                            DateTime diahoy = DateTime.Now;
                            TimeSpan agingr = diahoy - registro;
                            int aging = agingr.Days;

                            ///
                            if (item.GetType().GetProperty("FECHAC").GetValue(item, null) != null)
                            {
                                fechaSap = ViewBag.Calendario.fechaAint(item.GetType().GetProperty("FECHAC").GetValue(item, null));
                            }

                    <tr>
                        <td>
                            @item.GetType().GetProperty("ID").GetValue(item, null)  @item.GetType().GetProperty("NOMBRE").GetValue(item, null)
                        </td>
                        <td>
                            @if (item.GetType().GetProperty("FECHAC").GetValue(item, null) != null)
                            {
                                var dt = item.GetType().GetProperty("FECHAC").GetValue(item, null) ?? DateTime.Now;
                                var datetime = dt;
                                @datetime
                            }
                            else
                            {
                                string nodata = "Sin Datos";
                                @nodata
                            }
                        </td>
                        <td> </td>
                        <td onclick="document.location='@Url.Action("Details", "Solicitudes", new { id = item.GetType().GetProperty("NUM_DOC").GetValue(item, null), pais = "" })'" style="cursor:pointer">
                            <a href="@ViewBag.baseURL/Solicitudes/Details/@item.GetType().GetProperty("NUM_DOC").GetValue(item, null)">@item.GetType().GetProperty("NUM_DOC").GetValue(item, null)</a>
                        </td>
                        
                        <td>
                            @item.GetType().GetProperty("DOCUMENTO_SAP").GetValue(item, null)
                        </td>
                        <td>
                            @item.GetType().GetProperty("PAYER_ID").GetValue(item, null) @item.GetType().GetProperty("NAME1").GetValue(item, null) @item.GetType().GetProperty("TXT50").GetValue(item, null) @item.GetType().GetProperty("CONCEPTO").GetValue(item, null)
                        </td>
                        <td>
                            @item.GetType().GetProperty("COMENTARIO").GetValue(item, null)
                        </td>
                        <td>
                            @foreach (var docamnt in ViewBag.MontoNeg)
                            {
                                foreach (var amount in docamnt)
                                {
                                    if (item.GetType().GetProperty("NUM_DOC").GetValue(item, null) == amount.GetType().GetProperty("DOCUMENTO_REF").GetValue(amount, null))
                                    {
                                        amountParent = amountParent - amount.GetType().GetProperty("MONTO_DOC_MD").GetValue(amount, null);
                                    }

                                }
                            }
                            @if (amountParent >= 0)
                            {
                                string showamnt = "($" + amountParent + ")";
                                @showamnt;

                            }
                            else
                            {
                            }
                        </td>
                        <td>
                            @if (amountParent < 0)
                            {
                                amountParent = amountParent * -1;
                                string showamnt = "($" + amountParent + ")";
                                @showamnt;
                            }
                        </td>
                        <td>
                            @item.GetType().GetProperty("USUARIOD_ID").GetValue(item, null)
                        </td>
                        <td>
                            @item.GetType().GetProperty("USUARIOA_ID").GetValue(item, null)
                        </td>
                        <td>
                            @aging
                        </td>
                    </tr>
                        }
                    }
                </tbody>
            </table>
        </div>
    }
    else { }
    <style>




        .dataTables_length {
            display: none;
        }

        .dataTables_filter {
            display: none;
        }

        .dataTables_scrollHeadInner, .mdl-data-table {
            width: 100%;
        }

        ul {
            padding-left: 20px;
        }

        .btn {
            font-size: .8em;
        }
        /* not sure why this is needed... */
        .material-icons {
            vertical-align: bottom;
        }

        select {
            display: block !important;
        }

        th {
            text-align: center !important;
        }
    </style>
}