@model TAT001.Entities.MATERIAL

@{
    ViewBag.pagina_r = 664;
    ViewBag.carpeta_r = 500;
    //ViewBag.Title = "Páginas";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="row">
        <div class="row right">
            <div class="col l12 m12 right">
                <input type="submit" value="Agregar" class="btn btn-default" />
            </div>
        </div>
    </div>

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="row">
            <div class="row" style="height:10px;width:100%;">
                <div class="col l7 pink darken-1" style="height:10px;padding:0;"></div>
                <div class="col l3 pink darken-4" style="height:10px;padding:0;">
                    <div class="col l3 pink darken-4" style="height:10px;padding:0;"></div>
                    <div class="col l8 orange" style="height:10px;padding:0;"></div>
                    <div class="col l1 red" style="height:10px;padding:0;"></div>
                </div>
                <div class="col l2 yellow" style="height:10px;padding:0;"></div>
            </div>
        </div>

        <div class="row">
            <div class="col s6 m6 l6 col offset-s3 offset-m3 offset-l3">
                <div class="col l12 m12 s12">
                    <div class="input-field col l10 m10" style="margin-bottom:0;">
                        @Html.EditorFor(model => model.ID, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.LabelFor(model => model.ID, htmlAttributes: new { @class = "control-label col-md-2", @id = "" })
                        @Html.ValidationMessageFor(model => model.ID, "", new { @class = "text-danger" })
                    </div>

                    <div class="input-field col l10 m10" style="margin-bottom:0;">
                        @Html.EditorFor(model => model.MTART, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.LabelFor(model => model.MTART, htmlAttributes: new { @class = "control-label col-md-2", @id = "lbl_tipom" })
                        @Html.ValidationMessageFor(model => model.MTART, "", new { @class = "text-danger" })
                    </div>

                    <div class="input-field col l10 m10" style="margin-bottom:0;">
                        @Html.DropDownList("MATKL_ID", null, htmlAttributes: new { @id = "sel-mat" })
                        @Html.LabelFor(model => model.CATEGORIA.DESCRIPCION, "MATKL_ID", htmlAttributes: new { @class = "control-label col-md-2", @id = "lbl_grupoa" })
                        @Html.ValidationMessageFor(model => model.CATEGORIA.DESCRIPCION, "", new { @class = "text-danger" })
                    </div>
                    <script>
                        var elem = document.getElementById('sel-mat');
                        var options = [];
                        var instance = M.FormSelect.init(elem, options);
                    </script>

                    <div class="input-field col l10 m10" style="margin-bottom:0;">
                        @Html.EditorFor(model => model.MAKTX, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.LabelFor(model => model.MAKTX, htmlAttributes: new { @class = "control-label col-md-2", @id = "lbl_textobm" })
                        @Html.ValidationMessageFor(model => model.MAKTX, "", new { @class = "text-danger" })
                    </div>

                    <div class="input-field col l10 m10" style="margin-bottom:0;">
                        @Html.EditorFor(model => model.MAKTG, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.LabelFor(model => model.MAKTG, htmlAttributes: new { @class = "control-label col-md-2", @id = "lbl_textobmm" })
                        @Html.ValidationMessageFor(model => model.MAKTG, "", new { @class = "text-danger" })
                    </div>

                    <div class="input-field col l10 m10" style="margin-bottom:0;">
                        @Html.DropDownList("MEINS", null, htmlAttributes: new { @class = "form-control", @id = "sel-meins" })
                        @Html.LabelFor(model => model.MEINS, "MEINS", htmlAttributes: new { @class = "control-label col-md-2", @id = "lbl_unidadm" })
                        @Html.ValidationMessageFor(model => model.MEINS, "", new { @class = "text-danger" })
                    </div>
                    <script>
                        var elem = document.getElementById('sel-meins');
                        var options = [];
                        var instance = M.FormSelect.init(elem, options);
                    </script>

                    <div class="input-field col l10 m10" style="margin-bottom:0;">
                        @Html.DropDownList("CTGR", null, htmlAttributes: new { @class = "form-control", @id = "sel-zc" })
                        @Html.LabelFor(model => model.CTGR, "CTGR", htmlAttributes: new { @class = "control-label col-md-2", @id = "" })
                        @Html.ValidationMessageFor(model => model.CTGR, "", new { @class = "text-danger" })
                    </div>
                    <script>
                        var elem = document.getElementById('sel-zc');
                        var options = [];
                        var instance = M.FormSelect.init(elem, options);
                    </script>

                    <div class="input-field col l10 m10" style="margin-bottom:0;">
                        @Html.DropDownList("BRAND", null, htmlAttributes: new { @class = "form-control", @id = "sel-zb" })
                        @Html.LabelFor(model => model.BRAND, "BRAND", htmlAttributes: new { @class = "control-label col-md-2", @id = "" })
                        @Html.ValidationMessageFor(model => model.BRAND, "", new { @class = "text-danger" })
                    </div>
                    <script>
                        var elem = document.getElementById('sel-zb');
                        var options = [];
                        var instance = M.FormSelect.init(elem, options);
                    </script>

                    <div class="input-field col l10 m10" style="margin-bottom:0;">
                        @Html.EditorFor(model => model.PUNIT, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.LabelFor(model => model.PUNIT, htmlAttributes: new { @class = "control-label col-md-2", @id = "lbl_unidadmm" })
                        @Html.ValidationMessageFor(model => model.PUNIT, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
    </div>
}
<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@*<script type="text/javascript">
    function GetSelectedTextValue(sel) {
        var selectedText = ddlFruits.options[sel.selectedIndex].innerHTML;
        var selectedValue = sel.value;
    }
</script>*@
