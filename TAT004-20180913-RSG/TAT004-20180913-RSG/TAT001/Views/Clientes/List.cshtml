@using TAT001.Entities;
@using PagedList.Mvc
@model TAT001.Models.ClienteViewModel
<link href="~/Content/PagedList.css" rel="stylesheet" />
<table class="table mdl-data-table striped" id="table" style="width:100%;">
    <thead>
        <tr class="header">
            <th>
                @Html.ActionLink("KUNNR", "List", new { colOrden = "KUNNR", ordenActual = Model.ordenActual, numRegistros = Model.numRegistros, buscar=Model.buscar })
            </th>
            <th>
                @Html.ActionLink("NAME1", "List", new { colOrden = "NAME1", ordenActual = Model.ordenActual, numRegistros = Model.numRegistros, buscar = Model.buscar })
            </th>
            <th>
                @Html.ActionLink("SUBREGION", "List", new { colOrden = "SUBREGION", ordenActual = Model.ordenActual, numRegistros = Model.numRegistros, buscar = Model.buscar })
            </th>
            <th>
                @Html.ActionLink("LAND", "List", new { colOrden = "LAND", ordenActual = Model.ordenActual, numRegistros = Model.numRegistros, buscar = Model.buscar })
            </th>
            <th>
                @Html.ActionLink("PARVW", "List", new { colOrden = "PARVW", ordenActual = Model.ordenActual, numRegistros = Model.numRegistros, buscar = Model.buscar })
            </th>
            <th>
                @Html.ActionLink("PAYER", "List", new { colOrden = "PAYER", ordenActual = Model.ordenActual, numRegistros = Model.numRegistros, buscar = Model.buscar })
            </th>
            <th>
                @Html.ActionLink("CANAL", "List", new { colOrden = "CANAL", ordenActual = Model.ordenActual, numRegistros = Model.numRegistros, buscar = Model.buscar })
            </th>
            <th>
                @Html.ActionLink("ACTIVO", "List", new { colOrden = "ACTIVO", ordenActual = Model.ordenActual, numRegistros = Model.numRegistros, buscar = Model.buscar })</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.clientes)
        {
        <tr>
            <td>
                @item.KUNNR.TrimStart('0')
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.NAME1)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.SUBREGION)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PAI.LANDX)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PARVW)
            </td>
            <td>
                @item.PAYER.TrimStart('0')
            </td>
            <td>
                @item.CANAL
            </td>
            @if ((bool)item.ACTIVO == true)
            {
                <td style="align-items:center"><i class='material-icons green-text'>check</i></td>}
            else
            {
                <td style="align-items:center;"><i class='material-icons red-text'>clear</i></td>}
            <td>
                <a href="@Url.Action("Edit", "Clientes", new { vko = item.VKORG, vtw = item.VTWEG, spa = item.SPART, kun = item.KUNNR })">
                    <i class='material-icons green-text'>edit</i>
                </a>
                <a href="@Url.Action("Details", "Clientes", new { vko = item.VKORG, vtw = item.VTWEG, spa = item.SPART, kun = item.KUNNR })">
                    <i class='material-icons blue-text'>search</i>
                </a>
                <a data-form-method="post" href="@Url.Action("Index", "Contacto", new { vko = item.VKORG, vtw = item.VTWEG, kun = item.KUNNR, spa = item.SPART })">
                    <i class='material-icons orange-text'>contacts</i>
                </a>
                @*<a data-form-method="post" href="@Url.Action("Index", "Iimpuesto", new { vko = item.VKORG, vtw = item.VTWEG, kun = item.KUNNR, spa = item.SPART })">
                <i class='material-icons yellow-text'>monetization_on</i>
            </a>*@
            </td>
        </tr>
        }
    </tbody>
</table>
<div id='Paging' style="text-align: center">
    @(Model.clientes.PageCount < Model.clientes.PageNumber ? 0 : Model.clientes.PageNumber)
    - @Model.clientes.PageCount

    @Html.PagedListPager(Model.clientes, page => Url.Action("List", new { pagina = page, numRegistros = Model.numRegistros, buscar = Model.buscar, colOrden=Model.ordenActual }))
</div>

<script>
    //-----Sort
    function sort() {
        var sortLink = $('.header>th>a');
        for (var i = 0; i < sortLink.length; i++) {
            var url = sortLink.get(i).getAttribute("href");
            var id = 'link_h' + i;
            if (url) {
                sortLink.get(i).setAttribute("id", id);
                sortLink.get(i).setAttribute("url", url);
                $('#' + id).click(function (me) {
                    fnCommon.showProcess(true);
                    $.ajax({
                        url: me.target.getAttribute('url'),
                        success: function (resultView) {
                            if (resultView.isRedirect) {
                                window.location = resultView.redirectUrl;
                            } else {
                                fnCommon.showProcess(false);
                                $('#list').html(resultView);
                                sort();
                            }
                        }
                    });
                });
            }
            sortLink.get(i).removeAttribute("href");
        }
    }
    sort();
        //-----Pagination
    function pagination() {
        var paginationLink = $('.pagination>li>a');
        for (var i = 0; i < paginationLink.length; i++) {
            var url = paginationLink.get(i).getAttribute("href");
            var id = 'link_p' + i;
            if (url) {
                paginationLink.get(i).setAttribute("id", id);
                paginationLink.get(i).setAttribute("url", url);
                $('#' + id).click(function (me) {
                    fnCommon.showProcess(true);
                    $.ajax({
                        url: me.target.getAttribute('url'),
                        success: function (resultView) {
                            if (resultView.isRedirect) {
                                window.location = resultView.redirectUrl;
                            } else {
                                fnCommon.showProcess(false);
                                $('#list').html(resultView);
                                pagination();
                            }
                        }
                    });
                });
            }
            paginationLink.get(i).removeAttribute("href");
        }
    }
    pagination();

</script>
<div>
    @if (ViewBag.textos != null)
    {
        foreach (TEXTO t in ViewBag.textos)
        {
            <script>
                try {
                    var elem = document.getElementById("@t.CAMPO_ID");
                    if (elem.nodeName != 'INPUT' & elem.nodeName != 'SELECT' & elem.nodeName != 'TABLE' & elem.nodeName != 'TEXTAREA')
                    elem.innerHTML = "@t.TEXTOS";
                } catch (e) {
                    try {
                        var divs = document.getElementsByClassName("@t.CAMPO_ID");
                        [].slice.call(divs).forEach(function (div) {
                            if (div.nodeName != 'INPUT' & div.nodeName != 'SELECT' & div.nodeName != 'TABLE' & div.nodeName != 'TEXTAREA')
                            div.innerHTML = "@t.TEXTOS";
                        });
                    }
                    catch (ee) {
                    }
                 }
            </script>
        }
    }
</div>