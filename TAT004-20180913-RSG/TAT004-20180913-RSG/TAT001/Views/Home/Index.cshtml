@*@model IEnumerable<TAT001.Entities.DOCUMENTO>*@
@model IEnumerable<TAT001.Models.Documento>
@using System.Web.Hosting;
@{
    //ViewBag.Title = "Páginas";
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.pagina_r = 101;
    ViewBag.carpeta_r = 100;
    List<TAT001.Entities.CLIENTE> lst = ViewBag.Clientes as List<TAT001.Entities.CLIENTE>;
    List<TAT001.Entities.CUENTA> lstC = ViewBag.Cuentas as List<TAT001.Entities.CUENTA>;
    List<TAT001.Entities.DOCUMENTOF> lstD = ViewBag.DOCF as List<TAT001.Entities.DOCUMENTOF>;
    //ViewBag.BORRADOR = "Mensaje de creación";
}
<script>
    var root = "@Url.Content("~")";
</script>

@*//jemo inicio 4/07/2018*@
@if (ViewBag.imgnoticia != null)
{
    if (String.IsNullOrEmpty(ViewBag.imgnoticia) == false)
    {
        <div class="parallax-container" style="height:250px;">
            <div class="@*parallax*@">
                @if (Request.Url.PathAndQuery != "/")
                {
                    <img src="@Request.Url.OriginalString.Replace(Request.Url.PathAndQuery, "")@HostingEnvironment.ApplicationVirtualPath/@ViewBag.imgnoticia" style="height: 200px; position:absolute; width:100%;" />
                }
                else
                {
                    <img src="@Request.Url.OriginalString@HostingEnvironment.ApplicationVirtualPath/@ViewBag.imgnoticia" style="height: 200px; position:absolute; width:100%;" />
                }
            </div>
        </div>

        @*<script>
                document.addEventListener('DOMContentLoaded', function () {
                    var elems = document.querySelectorAll('.parallax');
                    var instances = M.Parallax.init(elems, options);
                });
            </script>*@
    }
}

@*////jemo inicio 4/07/2018*@

@*@section noticia{
        @if (true)
        {
            <div style="width:320px;"></div>
                    <div class="parallax-container" >
                        <div class="parallax">
                            <img src="~/images/parallax.jpg" />
                        </div>
                    </div>
                <script>
                    document.addEventListener('DOMContentLoaded', function () {
                        var elems = document.querySelectorAll('.parallax');
                        var instances = M.Parallax.init(elems, []);
                    });</script>
        }
    }*@
<!--BOTONES-->
<div class="row">
    @if (ViewBag.delegados != null)
    {
        <div class="col s4">
            <label for="txt_user">Usuario</label>
            <select onchange="cambiaUsuario(this.value);" id="txt_user">
                @foreach (TAT001.Entities.USUARIO u in ViewBag.delegados)
                {
                    if (u.ID == ViewBag.usuariod)
                    {
                        <option selected="selected" value="@u.ID">@u.ID - @u.NOMBRE @u.APELLIDO_P @u.APELLIDO_M</option>
                    }
                    else
                    {
                        <option value="@u.ID">@u.ID - @u.NOMBRE @u.APELLIDO_P @u.APELLIDO_M</option>
                    }
                }
            </select>
        </div>
        <script>
            //var elems = document.querySelectorAll('select');
            //var instances = M.FormSelect.init(elems, []);
            function cambiaUsuario(user_id) {
                document.location.replace("/?id=" + user_id);
            }
        </script>
    }
    <div class="col s8 right-align right">
        @if (ViewBag.nivelUsuario == 14)
        {
            using (Html.BeginForm("DescargarEx", "Home", FormMethod.Post, new { @style = "display:inline;" }))
            {
                <button id="btnExport" name="excel" class="btn-small"></button>
            }
        }
        else
        {
            @Html.ActionLink("Crear Solicitud", "Create", "Solicitudes", null, new { @class = "btn-small", @id = "btn_create" });
            using (Html.BeginForm("Descargar", "Home", FormMethod.Post, new { @style = "display:inline;" }))
            {
                <button id="btnExport" name="excel" class="btn-small" type="submit" value="Excel"></button>
            }
        }
        @*@Html.ActionLink("Enviar Negociaciones", "Edit", "Negociaciones", null, new { @class = "btn-small red", @onclick = "document.getElementById('loader').style.display = 'initial';" })*@
    </div>
    <div class="col s12 right-align" style="margin-top:5px;">

    </div>
</div>
<!--MENSAJES-->
<div>
    <style>

        /*#toast-container {*/
        /*.toast {
            padding: 10px 16px;
            font-weight: 400;
            overflow: hidden;
            font-size: 16px;
        }

            .toast:before {
                content: "\e656";
                font-size: 24px;
                color: white;
                display: inline-block;
                position: relative;
                float: left;
                margin: 0 10px 0 0;
                font-family: "Material-Design-Icons";
            }*/
        /*}*/
    </style>
    @*//B20180625 MGC 2018.06.26*@
    @if (ViewBag.BORRADOR != null)
    {
        if (ViewBag.BORRADOR != "")
        {
            <script>
        $(document).ready(function () {
            function docMessage(msg) {
                //M.toast({ html: '<span style="padding-right:15px;"><i class="material-icons">error</i></span>  ' + msg });
                M.toast({ displayLength: 1000000, html: '<span style="padding-right:15px;"><i class="material-icons">error</i></span>  ' + msg + '<button class="btn-flat toast-action">Aceptar</button>' });
            }

            var message = '@ViewBag.BORRADOR';

            if (message != "")
            {
                // do drop down loic
                docMessage(message);
            }
            $("#btnExport1").click(function () {
                tableToExcel("table4exc","solicitudes");
            });
        });
            </script>
        }
    }
    @if (ViewBag.NUM_DOC != null)
    {
        if (ViewBag.NUM_DOC != "")
        {
            <script>
            $(document).ready(function () {
                    function docMessage(msg) {
                        M.toast({ html: msg });
                }

                var message = '@ViewBag.NUM_DOC';

                if (message != "")
                {
                    // do drop down loic
                    docMessage('Documento ' + message+' fue creado');
                }
                $("#btnExport1").click(function () {
                    tableToExcel("table4exc", "solicitudes");
                });
            });
            </script>
        }
    }

    @*///////////////////////////////L.G.P.P MODIFICACIONES INICIO*@
    @if (TempData["docs_masiva"] != null)
    {
        List<string> aa = (List<string>)TempData["docs_masiva"];
        foreach (var a in aa)
        {

            <script>
            $(document).ready(function () {
                function docMessage(msg) {
                    M.toast({ html: msg });
                }

                var messages = '@a';

                if (messages != "") {
                    if (messages.substring(0, 4) == "&lt;") {
                        docMessage('Error en registro ' + messages.replace("&lt;", ""));
                    }
                    else {
                        docMessage('Documento ' + messages + ' fue creado');
                    }
                }
                $("#btnExport1").click(function () {
                    tableToExcel("table4exc", "solicitudes");
                });
            });
            </script>
        }
        TempData["docs_masiva"] = null;
    }
    @*///////////////////////////////L.G.P.P MODIFICACIONES FIN*@

    @if (Session["error"] != null)
    {
        if (Session["error"].ToString() != "")
        {
            string message = Session["error"].ToString();
            Session["error"] = null;
            <script>
                $(document).ready(function () {
                    function docMessage(msg) {
                        M.toast({ html: msg });
                    }

                    /**/
                    var message = '@message';
                /**/

                if (message != "") {
                    docMessage(message);
                }

            });
            </script>
        }
    }
</div>
<!--TABLA-->
<div class="card-panel">
    <div class="row">
        <div class="row" style="margin-bottom:0;">
            <div class="input-field col s3 m3 l3">
                <select id="selecc">
                    <option value="10" selected>10</option>
                    <option value="25">25</option>
                    <option value="50">50</option>
                    <option value="100">100</option>
                </select>
                <label id="btn_length">Ver por página</label>
            </div>
            <div class="input-field col s5 m3 l3 offset-l6 offset-m6 offset-s4">
                <input type="text" class="global_filter" id="global_filter">
                <label for="global_filter" id="lbl_search">Buscar</label>
            </div>
        </div>
        <script>
            var elem = document.querySelectorAll('select');
            var options = [];
            var instance = M.FormSelect.init(elem, options);
        </script>
        <script src="//code.jquery.com/jquery-1.12.4.js"></script>
        <script src="//cdn.datatables.net/1.10.16/js/jquery.dataTables.min.js"></script>
        <script src="//cdn.datatables.net/1.10.16/js/dataTables.material.min.js"></script>
        <link href="~/Content/dataTable.css" rel="stylesheet" />
        @* ---DRS 24.09.18--- *@
        <link href="~/Content/formatos.css" rel="stylesheet" />
        @*<link href="~/Content/dataTables.material.min.css" rel="stylesheet" />*@
        <link href="//cdn.datatables.net/1.10.16/css/dataTables.material.min.css" rel="stylesheet" />
        @*RMG 05-11-19 Vista para usuario consulta*@
        @if (ViewBag.nivelUsuario == 14)
        {
            <div style="width:100%;height:50vh;overflow:scroll;">
                <table class="table mdl-data-table striped grid centered table" id="table" style="width:100%;">
                    <thead>
                        <tr>
                            <th id="head_campo_1">Co. Code</th>
                            <th id="head_campo_2">País</th>
                            <th id="head_campo_3">Subregión</th>
                            <th id="head_campo_4">Estado</th>
                            <th id="head_campo_5">Ciudad</th>
                            <th id="head_campo_6">Número solicitud</th>
                            <th id="head_campo_7">Fecha Solicitud</th>
                            <th id="head_campo_8">Hora solicitud</th>
                            <th id="head_campo_9">Semana del periodo</th>
                            <th id="head_campo_10">Periodo contable</th>
                            <th id="head_campo_11">Año</th>
                            <th id="head_campo_12">Tipo Solicitud</th>
                            <th id="head_campo_13">Tipo Provisión</th>
                            <th id="head_campo_14">Tipo NC</th>
                            <th id="head_campo_15">Tipo OP</th>
                            <th id="head_campo_16">Status</th>
                            <th id="head_campo_17">Concepto</th>
                            <th id="head_campo_18">Mecánica</th>
                            <th id="head_campo_19">De</th>
                            <th id="head_campo_20">A</th>
                            <th id="head_campo_21">De</th>
                            <th id="head_campo_22">A</th>
                            <th id="head_campo_23">Clasificación</th>
                            <th id="head_campo_24">Cuenta Contable Gasto</th>
                            <th id="head_campo_25">Nombre de la cuenta</th>
                            <th id="head_campo_26">Cliente</th>
                            <th id="head_campo_27">Nombre</th>
                            <th id="head_campo_28">Tipo de Cliente</th>
                            <th id="head_campo_29">Organización de Ventas</th>
                            <th id="head_campo_30">Tax ID</th>
                            <th id="head_campo_31">Canal</th>
                            <th id="head_campo_32">Descripción</th>
                            <th id="head_campo_33">Nombre de Contacto</th>
                            <th id="head_campo_34">Email de Contacto</th>
                            <th id="head_campo_35">$ Monto Original de Provisión</th>
                            <th id="head_campo_36">$ Monto NC/OP</th>
                            <th id="head_campo_37">$Monto Aplicado</th>
                            <th id="head_campo_38">Saldo Remanente Provisión</th>
                            <th id="head_campo_39">$ Monto Reverso Provisión</th>
                            <th id="head_campo_40">% Reverso</th>
                            <th id="head_campo_41">$ Exceso/(Insuficiencia) Provisión</th>
                            <th id="head_campo_42">% Exceso/(Insuficiencia) Provisión</th>
                            <th id="head_campo_43">Impactos / Beneficios en el gasto del Periodo</th>
                            <th id="head_campo_44">Núm. Registro Provisión</th>
                            <th id="head_campo_45">Núm. Registro NC/OP</th>
                            <th id="head_campo_46">Núm. Registro Reverso</th>
                            <th id="head_campo_47">Fecha Reverso Provisión</th>
                            <th id="head_campo_48">Periodo Contable Reverso</th>
                            <th id="head_campo_49">Razón Reverso</th>
                            <th id="head_campo_50">Comentario Reverso</th>
                            <th id="head_campo_51">Usuario</th>
                            <th id="head_campo_52">Back Up</th>
                            <th id="head_campo_53">Creado Por</th>
                            <th id="head_campo_54">Creado Por ID</th>
                            <th id="head_campo_55">Solicitado Por</th>
                            <th id="head_campo_56">Solicitado Por ID</th>
                            <th id="head_campo_57">Modificado Por</th>
                            <th id="head_campo_58">Modificado Por ID</th>
                            <th id="head_campo_59">Aprobador Nivel 1</th>
                            <th id="head_campo_60">Aprobador Nivel 2</th>
                            <th id="head_campo_61">Aprobador Nivel 3</th>
                            <th id="head_campo_62">Aprobador Nivel 4</th>
                            <th id="head_campo_63">Aprobador Nivel 5</th>
                            <th id="head_campo_64">Proveedor</th>
                            <th id="head_campo_65">Nombre Proveedor</th>
                            <th id="head_campo_66">Número Factura Proveedor</th>
                            <th id="head_campo_67">Número Factura Kellogg´s</th>
                            <th id="head_campo_68">Número NC </th>
                            <th id="head_campo_69">Numero Orden de Pago</th>
                            <th id="head_campo_70">Expense Recognition en periodo</th>
                            <th id="head_campo_71">Expense Recognition Ejercicio</th>
                            <th id="head_campo_72">Soporte Incorrecto</th>
                            <th id="head_campo_73">Soporte validado con base variable pendiente</th>
                            <th id="head_campo_74">Carta</th>
                            <th id="head_campo_75">Contrato</th>
                            <th id="head_campo_76">JBP</th>
                            <th id="head_campo_77">Factura</th>
                            <th id="head_campo_78">Otros</th>
                            <th id="head_campo_79">Negociación por monto</th>
                            <th id="head_campo_80">Negociación por %</th>
                            <th id="head_campo_81">Distribución por material</th>
                            <th id="head_campo_82">Distribución categoría</th>
                            <th id="head_campo_83">Monto Base</th>
                            <th id="head_campo_84">Monto %</th>
                            <th id="head_campo_85">Recurrente</th>
                            <th id="head_campo_86">Recurrente por porcentaje</th>
                            <th id="head_campo_87">Recurrente por Monto</th>
                            <th id="head_campo_88">Recurrente Cancelada</th>
                            <th id="head_campo_89">Objetivo Inicio</th>
                            <th id="head_campo_90">Objetivo Límite</th>
                            <th id="head_campo_91">Estatus</th>
                            <th id="head_campo_92">Venta del Periodo</th>
                            <th id="head_campo_93">Monto Provisión</th>
                            <th id="head_campo_94">Back Order</th>
                            <th id="head_campo_95">Venta Real + BO</th>
                            <th id="head_campo_96">NC / OP o Reverso</th>
                            <th id="head_campo_97">Monto</th>
                        </tr>
                    </thead>

                    <tbody>

                        @foreach (TAT001.Models.ReportesModel.Concentrado item in ViewBag.lista_reporte)
                        {
                            <tr>

                                <td>@(item.documento.SOCIEDAD_ID)</td>
                                <td>@(item.documento.PAIS_ID)</td>
                                <td>@(item.documento.CLIENTE.REGION)</td>
                                <td>@(item.documento.ESTADO)</td>
                                <td>@(item.documento.CIUDAD)</td>
                                <td>@(item.documento.NUM_DOC)</td>
                                <td>@(((DateTime)item.documento.FECHAC).ToShortDateString())</td>
                                <td>@(((DateTime)item.documento.FECHAC).ToString("HH:mm:ss"))</td>
                                <td>@(item.SEMANA)</td>
                                <td>@(item.documento.PERIODO)</td>
                                <td>@(item.documento.EJERCICIO)</td>
                                @try
                                {
                                    <td>@(item.documento.TSOL.TSOLTs.Where(a => a.SPRAS_ID.Equals(item.documento.USUARIO.SPRAS_ID)).FirstOrDefault().TXT020)</td>
                                }
                                catch { }
                                <td>
                                    @if (item.documento.TSOL_ID.StartsWith("PR"))
                                    {
                                        try
                                        {
                                            @(item.documento.TSOL.TSOLTs.Where(a => a.SPRAS_ID.Equals(item.documento.USUARIO.SPRAS_ID)).FirstOrDefault().TXT50)
                                        }
                                        catch { }
                                    }
                                </td>
                                <td>
                                    @try
                                    {
                                        if (item.documento.TSOL_ID.StartsWith("NC"))
                                        {
                                            @(item.documento.TSOL.TSOLTs.Where(a => a.SPRAS_ID.Equals(item.documento.USUARIO.SPRAS_ID)).FirstOrDefault().TXT50)
                                        }
                                    }
                                    catch { }
                                </td>
                                <td>
                                    @if (item.documento.TSOL_ID.StartsWith("OP"))
                                    {
                                        @(item.documento.TSOL.TSOLTs.Where(a => a.SPRAS_ID.Equals(item.documento.USUARIO.SPRAS_ID)).FirstOrDefault().TXT50)
                                    }
                                </td>
                                <td>@(item.ESTATUS_STRING)</td>
                                <td>@(item.documento.CONCEPTO)</td>
                                <td>@(item.documento.NOTAS)</td>
                                @try
                                {
                                    <td>@(item.documento.FECHAI_VIG.Value.ToShortDateString())</td>
                                }
                                catch { }
                                @try
                                {
                                    <td>@(item.documento.FECHAF_VIG.Value.ToShortDateString())</td>
                                }
                                catch { }
                                <td></td>

                                <td></td>

                                <td>
                                    @try
                                    {
                                        @(item.documento.GALL.GALLTs.FirstOrDefault().TXT50)
                                    }
                                    catch { }
                                </td>
                                <td>@(item.CUENTA_CARGO)</td>
                                <td>@(item.CUENTA_CARGO_NOMBRE)</td>
                                <td>@(item.documento.CLIENTE.KUNNR)</td>
                                <td>@(item.documento.CLIENTE.NAME1)</td>
                                @if (item.documento.SOLD_TO_ID != null)
                                {
                                    <td>Sold To</td>
                                }
                                else
                                {
                                    <td>Payer</td>
                                }

                                <td>@(item.documento.CLIENTE.VKORG)</td>
                                <td>@(item.documento.CLIENTE.STCD1)</td>
                                <td>@(item.documento.CLIENTE.CANAL)</td>
                                <td>@((item.CANAL == null) ? "" : item.CANAL.CDESCRIPCION)</td>
                                <td>@(item.documento.PAYER_NOMBRE)</td>
                                <td>@(item.documento.PAYER_EMAIL)</td>
                                <td>
                                    @if (item.documento.TSOL_ID.StartsWith("PR"))
                                    {
                                        @(String.Format("{0:C}", item.documento.MONTO_DOC_MD))
                                    }
                                </td>
                                <td>
                                    @if (item.documento.TSOL_ID.StartsWith("NC") || item.documento.TSOL_ID.StartsWith("OP"))
                                    {
                                        @(String.Format("({0:C})", item.documento.MONTO_DOC_MD))
                                    }
                                </td>
                                <td>
                                    @try
                                    {
                                        @((item.PRESUPUESTO.PC_T == 0) ? string.Empty : String.Format("({0:C})", item.PRESUPUESTO.PC_T))
                                    }
                                    catch { }
                                </td>
                                <td>
                                    @try
                                    {
                                        @((item.PRESUPUESTO.CONSU == 0) ? string.Empty : String.Format("{0:C}", item.PRESUPUESTO.CONSU))
                                    }
                                    catch { }
                                </td>
                                <td>
                                    @if (item.DOCSREFREVERSOS != null)
                                    {
                                        @(String.Format("{0:C}", item.DOCSREFREVERSOS.GetType().GetProperty("dr").GetValue(item.DOCSREFREVERSOS, null).GetType().GetProperty("DOCUMENTO").GetValue(item.DOCSREFREVERSOS.GetType().GetProperty("dr").GetValue(item.DOCSREFREVERSOS, null), null).GetType().GetProperty("MONTO_DOC_MD").GetValue(item.DOCSREFREVERSOS.GetType().GetProperty("dr").GetValue(item.DOCSREFREVERSOS, null).GetType().GetProperty("DOCUMENTO").GetValue(item.DOCSREFREVERSOS.GetType().GetProperty("dr").GetValue(item.DOCSREFREVERSOS, null), null), null)))
                                    }
                                </td>
                                <td>
                                    @if (item.DOCSREFREVERSOS != null)
                                    {
                                        @((Convert.ToDecimal(item.DOCSREFREVERSOS.GetType().GetProperty("dr").GetValue(item.DOCSREFREVERSOS, null).GetType().GetProperty("DOCUMENTO").GetValue(item.DOCSREFREVERSOS.GetType().GetProperty("dr").GetValue(item.DOCSREFREVERSOS, null), null).GetType().GetProperty("MONTO_DOC_MD").GetValue(item.DOCSREFREVERSOS.GetType().GetProperty("dr").GetValue(item.DOCSREFREVERSOS, null).GetType().GetProperty("DOCUMENTO").GetValue(item.DOCSREFREVERSOS.GetType().GetProperty("dr").GetValue(item.DOCSREFREVERSOS, null), null), null)) * 100) / item.documento.MONTO_DOC_MD)
                                    }
                                </td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td>@((item.documento.DOCUMENTOSAP != null) ? item.documento.DOCUMENTOSAP.NUM_DOC.ToString() : "")</td>
                                <td>
                                    @if (item.documento.TSOL_ID.StartsWith("NC") || item.documento.TSOL_ID.StartsWith("OP"))
                                    {
                                        @(item.documento.NUM_DOC)
                                    }
                                </td>
                                <td>
                                    @if (item.DOCSREFREVERSOS != null)
                                    {
                                        @(item.DOCSREFREVERSOS.GetType().GetProperty("dr").GetValue(item.DOCSREFREVERSOS, null).GetType().GetProperty("NUM_DOC").GetValue(item.DOCSREFREVERSOS.GetType().GetProperty("dr").GetValue(item.DOCSREFREVERSOS, null), null))
                                    }
                                </td>
                                <td>
                                    @if (item.DOCSREFREVERSOS != null)
                                    {
                                        @(item.DOCSREFREVERSOS.GetType().GetProperty("dr").GetValue(item.DOCSREFREVERSOS, null).GetType().GetProperty("FECHAC").GetValue(item.DOCSREFREVERSOS.GetType().GetProperty("dr").GetValue(item.DOCSREFREVERSOS, null), null))
                                    }
                                </td>
                                <td>
                                    @if (item.DOCSREFREVERSOS != null)
                                    {
                                        @(item.DOCSREFREVERSOS.GetType().GetProperty("d").GetValue(item.DOCSREFREVERSOS, null).GetType().GetProperty("PERIODO").GetValue(item.DOCSREFREVERSOS.GetType().GetProperty("d").GetValue(item.DOCSREFREVERSOS, null), null))
                                    }
                                </td>
                                <td>
                                    @if (item.DOCSREFREVERSOS != null)
                                    {
                                        @(item.DOCSREFREVERSOS.GetType().GetProperty("tr").GetValue(item.DOCSREFREVERSOS, null).GetType().GetProperty("TXT100").GetValue(item.DOCSREFREVERSOS.GetType().GetProperty("tr").GetValue(item.DOCSREFREVERSOS, null), null))
                                    }
                                </td>
                                <td>
                                    @if (item.DOCSREFREVERSOS != null)
                                    {
                                        @(item.DOCSREFREVERSOS.GetType().GetProperty("dr").GetValue(item.DOCSREFREVERSOS, null).GetType().GetProperty("COMENTARIO").GetValue(item.DOCSREFREVERSOS.GetType().GetProperty("dr").GetValue(item.DOCSREFREVERSOS, null), null))
                                    }
                                </td>
                                <td>@(item.documento.USUARIO.NOMBRE + " " + item.documento.USUARIO.APELLIDO_P)</td>
                                <td>@(item.documento.USUARIO.BACKUP_ID)</td>
                                <td>@(item.documento.USUARIO.NOMBRE + " " + item.documento.USUARIO.APELLIDO_P)</td>
                                <td>@(item.documento.USUARIO.ID)</td>
                                <td>@(item.documento.USUARIO.NOMBRE + " " + item.documento.USUARIO.APELLIDO_P)</td>
                                <td>@(item.documento.USUARIO.ID)</td>
                                <td>@(item.documento.USUARIOD_ID)</td>
                                <td>@(item.documento.USUARIOD_ID)</td>
                                <td>
                                    @try
                                    {
                                        @(item.documento.FLUJOes.Where(u => u.WF_POS == 1).Select(u => u.USUARIO.NOMBRE + " " + u.USUARIO.APELLIDO_P).FirstOrDefault())
                                    }
                                    catch { }
                                </td>
                                <td>
                                    @try
                                    {
                                        @(item.documento.FLUJOes.Where(u => u.WF_POS == 2).Select(u => u.USUARIO.NOMBRE + " " + u.USUARIO.APELLIDO_P).FirstOrDefault())
                                    }
                                    catch { }
                                </td>
                                <td>
                                    @try
                                    {
                                        @(item.documento.FLUJOes.Where(u => u.WF_POS == 3).Select(u => u.USUARIO.NOMBRE + " " + u.USUARIO.APELLIDO_P).FirstOrDefault())
                                    }
                                    catch { }
                                </td>
                                <td>
                                    @try
                                    {
                                        @(item.documento.FLUJOes.Where(u => u.WF_POS == 4).Select(u => u.USUARIO.NOMBRE + " " + u.USUARIO.APELLIDO_P).FirstOrDefault())
                                    }
                                    catch { }
                                </td>
                                <td>
                                    @try
                                    {
                                        @(item.documento.FLUJOes.Where(u => u.WF_POS == 5).Select(u => u.USUARIO.NOMBRE + " " + u.USUARIO.APELLIDO_P).FirstOrDefault())
                                    }
                                    catch { }
                                </td>
                                <td>@(item.documento.DOCUMENTOFs.Select(df => df.PROVEEDOR).FirstOrDefault())</td>
                                <td>@(item.PROVEEDOR_NOMBRE)</td>
                                <td>@(item.documento.DOCUMENTOFs.Select(df => df.BILL_DOC).FirstOrDefault())</td>
                                <td>@(item.documento.DOCUMENTOFs.Select(df => df.FACTURAK).FirstOrDefault())</td>
                                <td></td>
                                <td></td>
                                <td>@((item.documento.DOCUMENTOTS.Where(x => x.TSFORM_ID == 1 && (bool)x.CHECKS).Count() > 0) ? "X" : "") </td>
                                <td>@((item.documento.DOCUMENTOTS.Where(x => x.TSFORM_ID == 2 && (bool)x.CHECKS).Count() > 0) ? "X" : "")</td>
                                <td>@((item.documento.DOCUMENTOTS.Where(x => x.TSFORM_ID == 3 && (bool)x.CHECKS).Count() > 0) ? "X" : "")</td>
                                <td>@((item.documento.DOCUMENTOTS.Where(x => x.TSFORM_ID == 4 && (bool)x.CHECKS).Count() > 0) ? "X" : "")</td>
                                <td>@((item.documento.DOCUMENTOAs.Where(da => da.CLASE.Equals("CAR")).Count() > 0) ? "X" : "")</td>
                                <td>@((item.documento.DOCUMENTOAs.Where(da => da.CLASE.Equals("CON")).Count() > 0) ? "X" : "")</td>
                                <td>@((item.documento.DOCUMENTOAs.Where(da => da.CLASE.Equals("JBP")).Count() > 0) ? "X" : "")</td>
                                <td>@((item.documento.DOCUMENTOAs.Where(da => da.CLASE.Equals("FAC")).Count() > 0) ? "X" : "")</td>
                                <td>@((item.documento.DOCUMENTOAs.Where(da => da.CLASE.Equals("OTR")).Count() > 0) ? "X" : "")</td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td>@((item.documento.TIPO_RECURRENTE != null) ? "Si" : "No")</td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td>@(item.ESTATUS_STRING)</td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
            <div style="width:100%;height:50vh;overflow:scroll;display:none;">
                <table class="table mdl-data-table striped grid centered table" id="table4exc" style="width:100%;">
                    <thead>
                        <tr>
                            <th id="head_campo_1_1">Co. Code</th>
                            <th id="head_campo_2_1">Pa&iacute;s</th>
                            <th id="head_campo_3_1">Subregi&oacute;n</th>
                            <th id="head_campo_4_1">Estado</th>
                            <th id="head_campo_5_1">Ciudad</th>
                            <th id="head_campo_6_1">N&uacute; solicitud</th>
                            <th id="head_campo_7_1">Fecha Solicitud</th>
                            <th id="head_campo_8_1">Hora solicitud</th>
                            <th id="head_campo_9_1">Semana del periodo</th>
                            <th id="head_campo_10_1">Periodo contable</th>
                            <th id="head_campo_11_1">A&ntilde;o</th>
                            <th id="head_campo_12_1">Tipo Solicitud</th>
                            <th id="head_campo_13_1">Tipo Provisión</th>
                            <th id="head_campo_14_1">Tipo NC</th>
                            <th id="head_campo_15_1">Tipo OP</th>
                            <th id="head_campo_16_1">Status</th>
                            <th id="head_campo_17_1">Concepto</th>
                            <th id="head_campo_18_1">Mecánica</th>
                            <th id="head_campo_19_1">De</th>
                            <th id="head_campo_20_1">A</th>
                            <th id="head_campo_21_1">De</th>
                            <th id="head_campo_22_1">A</th>
                            <th id="head_campo_23_1">Clasificaci&oacute;n</th>
                            <th id="head_campo_24_1">Cuenta Contable Gasto</th>
                            <th id="head_campo_25_1">Nombre de la cuenta</th>
                            <th id="head_campo_26_1">Cliente</th>
                            <th id="head_campo_27_1">Nombre</th>
                            <th id="head_campo_28_1">Tipo de Cliente</th>
                            <th id="head_campo_29_1">Organización de Ventas</th>
                            <th id="head_campo_30_1">Tax ID</th>
                            <th id="head_campo_31_1">Canal</th>
                            <th id="head_campo_32_1">Descripción</th>
                            <th id="head_campo_33_1">Nombre de Contacto</th>
                            <th id="head_campo_34_1">Email de Contacto</th>
                            <th id="head_campo_35_1">$ Monto Original de Provisión</th>
                            <th id="head_campo_36_1">$ Monto NC/OP</th>
                            <th id="head_campo_37_1">$Monto Aplicado</th>
                            <th id="head_campo_38_1">Saldo Remanente Provisión</th>
                            <th id="head_campo_39_1">$ Monto Reverso Provisión</th>
                            <th id="head_campo_40_1">% Reverso</th>
                            <th id="head_campo_41_1">$ Exceso/(Insuficiencia) Provisión</th>
                            <th id="head_campo_42_1">% Exceso/(Insuficiencia) Provisión</th>
                            <th id="head_campo_43_1">Impactos / Beneficios en el gasto del Periodo</th>
                            <th id="head_campo_44_1">Núm. Registro Provisión</th>
                            <th id="head_campo_45_1">Núm. Registro NC/OP</th>
                            <th id="head_campo_46_1">Núm. Registro Reverso</th>
                            <th id="head_campo_47_1">Fecha Reverso Provisión</th>
                            <th id="head_campo_48_1">Periodo Contable Reverso</th>
                            <th id="head_campo_49_1">Razón Reverso</th>
                            <th id="head_campo_50_1">Comentario Reverso</th>
                            <th id="head_campo_51_1">Usuario</th>
                            <th id="head_campo_52_1">Back Up</th>
                            <th id="head_campo_53_1">Creado Por</th>
                            <th id="head_campo_54_1">Creado Por ID</th>
                            <th id="head_campo_55_1">Solicitado Por</th>
                            <th id="head_campo_56_1">Solicitado Por ID</th>
                            <th id="head_campo_57_1">Modificado Por</th>
                            <th id="head_campo_58_1">Modificado Por ID</th>
                            <th id="head_campo_59_1">Aprobador Nivel 1</th>
                            <th id="head_campo_60_1">Aprobador Nivel 2</th>
                            <th id="head_campo_61_1">Aprobador Nivel 3</th>
                            <th id="head_campo_62_1">Aprobador Nivel 4</th>
                            <th id="head_campo_63_1">Aprobador Nivel 5</th>
                            <th id="head_campo_64_1">Proveedor</th>
                            <th id="head_campo_65_1">Nombre Proveedor</th>
                            <th id="head_campo_66_1">Número Factura Proveedor</th>
                            <th id="head_campo_67_1">Número Factura Kellogg´s</th>
                            <th id="head_campo_68_1">Número NC </th>
                            <th id="head_campo_69_1">Numero Orden de Pago</th>
                            <th id="head_campo_70_1">Expense Recognition en periodo</th>
                            <th id="head_campo_71_1">Expense Recognition Ejercicio</th>
                            <th id="head_campo_72_1">Soporte Incorrecto</th>
                            <th id="head_campo_73_1">Soporte validado con base variable pendiente</th>
                            <th id="head_campo_74_1">Carta</th>
                            <th id="head_campo_75_1">Contrato</th>
                            <th id="head_campo_76_1">JBP</th>
                            <th id="head_campo_77_1">Factura</th>
                            <th id="head_campo_78_1">Otros</th>
                            <th id="head_campo_79_1">Negociación por monto</th>
                            <th id="head_campo_80_1">Negociación por %</th>
                            <th id="head_campo_81_1">Distribución por material</th>
                            <th id="head_campo_82_1">Distribución categoría</th>
                            <th id="head_campo_83_1">Monto Base</th>
                            <th id="head_campo_84_1">Monto %</th>
                            <th id="head_campo_85_1">Recurrente</th>
                            <th id="head_campo_86_1">Recurrente por porcentaje</th>
                            <th id="head_campo_87_1">Recurrente por Monto</th>
                            <th id="head_campo_88_1">Recurrente Cancelada</th>
                            <th id="head_campo_89_1">Objetivo Inicio</th>
                            <th id="head_campo_90_1">Objetivo Límite</th>
                            <th id="head_campo_91_1">Estatus</th>
                            <th id="head_campo_92_1">Venta del Periodo</th>
                            <th id="head_campo_93_1">Monto Provisión</th>
                            <th id="head_campo_94_1">Back Order</th>
                            <th id="head_campo_95_1">Venta Real + BO</th>
                            <th id="head_campo_96_1">NC / OP o Reverso</th>
                            <th id="head_campo_97_1">Monto</th>
                        </tr>
                    </thead>

                    <tbody>

                        @foreach (TAT001.Models.ReportesModel.Concentrado item in ViewBag.lista_reporte)
                        {
                            <tr>

                                <td>@(item.documento.SOCIEDAD_ID)</td>
                                <td>@(item.documento.PAIS_ID)</td>
                                <td>@(item.documento.CLIENTE.REGION)</td>
                                <td>@(item.documento.ESTADO)</td>
                                <td>@(item.documento.CIUDAD)</td>
                                <td>@(item.documento.NUM_DOC)</td>
                                <td>@(((DateTime)item.documento.FECHAC).ToShortDateString())</td>
                                <td>@(((DateTime)item.documento.FECHAC).ToString("HH:mm:ss"))</td>
                                <td>@(item.SEMANA)</td>
                                <td>@(item.documento.PERIODO)</td>
                                <td>@(item.documento.EJERCICIO)</td>
                                @try
                                {
                                    <td>@(item.documento.TSOL.TSOLTs.Where(a => a.SPRAS_ID.Equals(item.documento.USUARIO.SPRAS_ID)).FirstOrDefault().TXT020)</td>
                                }
                                catch { }
                                <td>
                                    @if (item.documento.TSOL_ID.StartsWith("PR"))
                                    {
                                        try
                                        {
                                            @(item.documento.TSOL.TSOLTs.Where(a => a.SPRAS_ID.Equals(item.documento.USUARIO.SPRAS_ID)).FirstOrDefault().TXT50)
                                        }
                                        catch { }
                                    }
                                </td>
                                <td>
                                    @try
                                    {
                                        if (item.documento.TSOL_ID.StartsWith("NC"))
                                        {
                                            @(item.documento.TSOL.TSOLTs.Where(a => a.SPRAS_ID.Equals(item.documento.USUARIO.SPRAS_ID)).FirstOrDefault().TXT50)
                                        }
                                    }
                                    catch { }
                                </td>
                                <td>
                                    @if (item.documento.TSOL_ID.StartsWith("OP"))
                                    {
                                        @(item.documento.TSOL.TSOLTs.Where(a => a.SPRAS_ID.Equals(item.documento.USUARIO.SPRAS_ID)).FirstOrDefault().TXT50)
                                    }
                                </td>
                                <td>@(item.ESTATUS_STRING)</td>
                                <td>@(item.documento.CONCEPTO)</td>
                                <td>@(item.documento.NOTAS)</td>
                                <td>@(item.documento.FECHAI_VIG.Value.ToShortDateString())</td>
                                <td>@(item.documento.FECHAF_VIG.Value.ToShortDateString())</td>
                                <td></td>
                                <td></td>
                                <td>
                                    @try
                                    {
                                        @(item.documento.GALL.GALLTs.FirstOrDefault().TXT50)
                                    }
                                    catch { }
                                </td>
                                <td>@(item.CUENTA_CARGO)</td>
                                <td>@(item.CUENTA_CARGO_NOMBRE)</td>
                                <td>@(item.documento.CLIENTE.KUNNR)</td>
                                <td>@(item.documento.CLIENTE.NAME1)</td>
                                @if (item.documento.SOLD_TO_ID != null)
                                {
                                    <td>Sold To</td>
                                }
                                else
                                {
                                    <td>Payer</td>
                                }

                                <td>@(item.documento.CLIENTE.VKORG)</td>
                                <td>@(item.documento.CLIENTE.STCD1)</td>
                                <td>@(item.documento.CLIENTE.CANAL)</td>
                                <td>@((item.CANAL == null) ? "" : item.CANAL.CDESCRIPCION)</td>
                                <td>@(item.documento.PAYER_NOMBRE)</td>
                                <td>@(item.documento.PAYER_EMAIL)</td>
                                <td>
                                    @if (item.documento.TSOL_ID.StartsWith("PR"))
                                    {
                                        @(String.Format("{0:C}", item.documento.MONTO_DOC_MD))
                                    }
                                </td>
                                <td>
                                    @if (item.documento.TSOL_ID.StartsWith("NC") || item.documento.TSOL_ID.StartsWith("OP"))
                                    {
                                        @(String.Format("({0:C})", item.documento.MONTO_DOC_MD))
                                    }
                                </td>
                                <td>
                                    @try
                                    {
                                        @((item.PRESUPUESTO.PC_T == 0) ? string.Empty : String.Format("({0:C})", item.PRESUPUESTO.PC_T))
                                    }
                                    catch { }
                                </td>
                                <td>
                                    @try
                                    {
                                        @((item.PRESUPUESTO.CONSU == 0) ? string.Empty : String.Format("{0:C}", item.PRESUPUESTO.CONSU))
                                    }
                                    catch { }
                                </td>
                                <td>
                                    @if (item.DOCSREFREVERSOS != null)
                                    {
                                        @(String.Format("{0:C}", item.DOCSREFREVERSOS.GetType().GetProperty("dr").GetValue(item.DOCSREFREVERSOS, null).GetType().GetProperty("DOCUMENTO").GetValue(item.DOCSREFREVERSOS.GetType().GetProperty("dr").GetValue(item.DOCSREFREVERSOS, null), null).GetType().GetProperty("MONTO_DOC_MD").GetValue(item.DOCSREFREVERSOS.GetType().GetProperty("dr").GetValue(item.DOCSREFREVERSOS, null).GetType().GetProperty("DOCUMENTO").GetValue(item.DOCSREFREVERSOS.GetType().GetProperty("dr").GetValue(item.DOCSREFREVERSOS, null), null), null)))
                                    }
                                </td>
                                <td>
                                    @if (item.DOCSREFREVERSOS != null)
                                    {
                                        @((Convert.ToDecimal(item.DOCSREFREVERSOS.GetType().GetProperty("dr").GetValue(item.DOCSREFREVERSOS, null).GetType().GetProperty("DOCUMENTO").GetValue(item.DOCSREFREVERSOS.GetType().GetProperty("dr").GetValue(item.DOCSREFREVERSOS, null), null).GetType().GetProperty("MONTO_DOC_MD").GetValue(item.DOCSREFREVERSOS.GetType().GetProperty("dr").GetValue(item.DOCSREFREVERSOS, null).GetType().GetProperty("DOCUMENTO").GetValue(item.DOCSREFREVERSOS.GetType().GetProperty("dr").GetValue(item.DOCSREFREVERSOS, null), null), null)) * 100) / item.documento.MONTO_DOC_MD)
                                    }
                                </td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td>@((item.documento.DOCUMENTOSAP != null) ? item.documento.DOCUMENTOSAP.NUM_DOC.ToString() : "")</td>
                                <td>
                                    @if (item.documento.TSOL_ID.StartsWith("NC") || item.documento.TSOL_ID.StartsWith("OP"))
                                    {
                                        @(item.documento.NUM_DOC)
                                    }
                                </td>
                                <td>
                                    @if (item.DOCSREFREVERSOS != null)
                                    {
                                        @(item.DOCSREFREVERSOS.GetType().GetProperty("dr").GetValue(item.DOCSREFREVERSOS, null).GetType().GetProperty("NUM_DOC").GetValue(item.DOCSREFREVERSOS.GetType().GetProperty("dr").GetValue(item.DOCSREFREVERSOS, null), null))
                                    }
                                </td>
                                <td>
                                    @if (item.DOCSREFREVERSOS != null)
                                    {
                                        @(item.DOCSREFREVERSOS.GetType().GetProperty("dr").GetValue(item.DOCSREFREVERSOS, null).GetType().GetProperty("FECHAC").GetValue(item.DOCSREFREVERSOS.GetType().GetProperty("dr").GetValue(item.DOCSREFREVERSOS, null), null))
                                    }
                                </td>
                                <td>
                                    @if (item.DOCSREFREVERSOS != null)
                                    {
                                        @(item.DOCSREFREVERSOS.GetType().GetProperty("d").GetValue(item.DOCSREFREVERSOS, null).GetType().GetProperty("PERIODO").GetValue(item.DOCSREFREVERSOS.GetType().GetProperty("d").GetValue(item.DOCSREFREVERSOS, null), null))
                                    }
                                </td>
                                <td>
                                    @if (item.DOCSREFREVERSOS != null)
                                    {
                                        @(item.DOCSREFREVERSOS.GetType().GetProperty("tr").GetValue(item.DOCSREFREVERSOS, null).GetType().GetProperty("TXT100").GetValue(item.DOCSREFREVERSOS.GetType().GetProperty("tr").GetValue(item.DOCSREFREVERSOS, null), null))
                                    }
                                </td>
                                <td>
                                    @if (item.DOCSREFREVERSOS != null)
                                    {
                                        @(item.DOCSREFREVERSOS.GetType().GetProperty("dr").GetValue(item.DOCSREFREVERSOS, null).GetType().GetProperty("COMENTARIO").GetValue(item.DOCSREFREVERSOS.GetType().GetProperty("dr").GetValue(item.DOCSREFREVERSOS, null), null))
                                    }
                                </td>
                                <td>@(item.documento.USUARIO.NOMBRE + " " + item.documento.USUARIO.APELLIDO_P)</td>
                                <td>@(item.documento.USUARIO.BACKUP_ID)</td>
                                <td>@(item.documento.USUARIO.NOMBRE + " " + item.documento.USUARIO.APELLIDO_P)</td>
                                <td>@(item.documento.USUARIO.ID)</td>
                                <td>@(item.documento.USUARIO.NOMBRE + " " + item.documento.USUARIO.APELLIDO_P)</td>
                                <td>@(item.documento.USUARIO.ID)</td>
                                <td>@(item.documento.USUARIOD_ID)</td>
                                <td>@(item.documento.USUARIOD_ID)</td>
                                <td>
                                    @try
                                    {
                                        @(item.documento.FLUJOes.Where(u => u.WF_POS == 1).Select(u => u.USUARIO.NOMBRE + " " + u.USUARIO.APELLIDO_P).FirstOrDefault())
                                    }
                                    catch { }
                                </td>
                                <td>
                                    @try
                                    {
                                        @(item.documento.FLUJOes.Where(u => u.WF_POS == 2).Select(u => u.USUARIO.NOMBRE + " " + u.USUARIO.APELLIDO_P).FirstOrDefault())
                                    }
                                    catch { }
                                </td>
                                <td>
                                    @try
                                    {
                                        @(item.documento.FLUJOes.Where(u => u.WF_POS == 3).Select(u => u.USUARIO.NOMBRE + " " + u.USUARIO.APELLIDO_P).FirstOrDefault())
                                    }
                                    catch { }
                                </td>
                                <td>
                                    @try
                                    {
                                        @(item.documento.FLUJOes.Where(u => u.WF_POS == 4).Select(u => u.USUARIO.NOMBRE + " " + u.USUARIO.APELLIDO_P).FirstOrDefault())
                                    }
                                    catch { }
                                </td>
                                <td>
                                    @try
                                    {
                                        @(item.documento.FLUJOes.Where(u => u.WF_POS == 5).Select(u => u.USUARIO.NOMBRE + " " + u.USUARIO.APELLIDO_P).FirstOrDefault())
                                    }
                                    catch { }
                                </td>
                                <td>@(item.documento.DOCUMENTOFs.Select(df => df.PROVEEDOR).FirstOrDefault())</td>
                                <td>@(item.PROVEEDOR_NOMBRE)</td>
                                <td>@(item.documento.DOCUMENTOFs.Select(df => df.BILL_DOC).FirstOrDefault())</td>
                                <td>@(item.documento.DOCUMENTOFs.Select(df => df.FACTURAK).FirstOrDefault())</td>
                                <td></td>
                                <td></td>
                                <td>@((item.documento.DOCUMENTOTS.Where(x => x.TSFORM_ID == 1 && (bool)x.CHECKS).Count() > 0) ? "X" : "") </td>
                                <td>@((item.documento.DOCUMENTOTS.Where(x => x.TSFORM_ID == 2 && (bool)x.CHECKS).Count() > 0) ? "X" : "")</td>
                                <td>@((item.documento.DOCUMENTOTS.Where(x => x.TSFORM_ID == 3 && (bool)x.CHECKS).Count() > 0) ? "X" : "")</td>
                                <td>@((item.documento.DOCUMENTOTS.Where(x => x.TSFORM_ID == 4 && (bool)x.CHECKS).Count() > 0) ? "X" : "")</td>
                                <td>@((item.documento.DOCUMENTOAs.Where(da => da.CLASE.Equals("CAR")).Count() > 0) ? "X" : "")</td>
                                <td>@((item.documento.DOCUMENTOAs.Where(da => da.CLASE.Equals("CON")).Count() > 0) ? "X" : "")</td>
                                <td>@((item.documento.DOCUMENTOAs.Where(da => da.CLASE.Equals("JBP")).Count() > 0) ? "X" : "")</td>
                                <td>@((item.documento.DOCUMENTOAs.Where(da => da.CLASE.Equals("FAC")).Count() > 0) ? "X" : "")</td>
                                <td>@((item.documento.DOCUMENTOAs.Where(da => da.CLASE.Equals("OTR")).Count() > 0) ? "X" : "")</td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td>@((item.documento.TIPO_RECURRENTE != null) ? "Si" : "No")</td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td>@(item.ESTATUS_STRING)</td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

        }
        else
        {
            @* ----DRS 24.09.18---- *@
            <table class="encabezados table mdl-data-table striped" id="table" style="width:100%;">
                <thead>
                    <tr>
                        <th></th>
                        <th class="lbl_num">
                            @Html.DisplayNameFor(model => model.NUM_DOC)
                        </th>
                        <th class="lblSociedad">
                            @Html.DisplayNameFor(model => model.SOCIEDAD_ID)
                        </th>
                        <th class="lblPais">
                            @Html.DisplayNameFor(model => model.PAIS_ID)
                        </th>
                        <th id="lbl_fechadd">
                            @Html.DisplayNameFor(model => model.FECHAD)
                        </th>
                        <th id="lbl_fechad">
                            @Html.DisplayNameFor(model => model.FECHAD)
                        </th>
                        <th id="lbl_horac">
                            @Html.DisplayNameFor(model => model.HORAC)
                        </th>
                        <th id="lblPC">
                            @Html.DisplayName("Periodo Contable")
                        </th>
                        <th id="lbl_estatus">
                            @Html.DisplayNameFor(model => model.ESTATUS)
                        </th>
                        <th class="lblPayId">
                            @Html.DisplayNameFor(model => model.PAYER_ID)
                        </th>
                        <th class="lblCliente">
                            @Html.DisplayName("Cliente")
                        </th>
                        <th id="lblCanal">
                            @Html.DisplayName("Canal")
                        </th>
                        <th id="lbl_tsol">
                            @Html.DisplayNameFor(model => model.TSOL)
                        </th>
                        <th id="lbl_tall">
                            @Html.DisplayNameFor(model => model.TALL)
                        </th>
                        @*<th id="lblCuentas">
                                @Html.DisplayName("Cuentas")
                            </th>*@
                        <th class="lblCCG">
                            @Html.DisplayName("Cuenta Contable Gasto")
                        </th>
                        <th id="lblCCP">
                            @Html.DisplayName("Cuenta Contable Pasivo")
                        </th>
                        <th id="lblCCC">
                            @Html.DisplayName("Cuenta Contable Clearing")
                        </th>
                        <th id="lbl_concepto">
                            @Html.DisplayNameFor(model => model.CONCEPTO)
                        </th>
                        <th id="lblMo">
                            @Html.DisplayNameFor(model => model.MONTO_DOC_ML)
                        </th>
                        <th id="lblFac">
                            @Html.DisplayName("Factura")
                        </th>
                        <th id="lblFack">
                            @Html.DisplayName("FacturaK")
                        </th>
                        <th id="lblUC">
                            @Html.DisplayNameFor(model => model.USUARIOC_ID)
                        </th>
                        <th id="lblUM">
                            @Html.DisplayName("Modificado por")
                        </th>
                        @*<th id="lblNC">
                                @Html.DisplayName("Número Nota Crédito/Orden de Pago")
                            </th>*@
                        <th id="lblRP" style="background-color:lightgrey">
                            @Html.DisplayName("Núm. Registro Provisión")
                        </th>
                        <th id="lblRnc" style="background-color:lightgrey">
                            @Html.DisplayName("Núm. Registro NC/OP")
                        </th>
                        <th id="lblRap" style="background-color:lightgrey">
                            @Html.DisplayName("Núm Registro AP")
                        </th>
                        <th id="lblRR" style="background-color:lightgrey">
                            @Html.DisplayName("Núm. Registro Reverso")
                        </th>
                        <th id="lblTDoc" style="background-color:lightgrey">
                            @Html.DisplayName("Tipo Documento")
                        </th>
                        <th class="lblPayId" style="background-color:lightgrey">
                            @Html.DisplayName("Payer")
                        </th>
                        <th id="lblCl" style="background-color:lightgrey">
                            @Html.DisplayName("Cliente")
                        </th>
                        <th id="lblIL" style="background-color:lightgrey">
                            @Html.DisplayName("$ Importe Moneda Local")
                        </th>
                        <th class="lblCCG" style="background-color:lightgrey">
                            @Html.DisplayName("Cuenta Contable Gasto")
                        </th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model@*.Where(x=>x.NUM_DOC == 0)*@)
{

<tr>
    <td class="details-control" style="cursor:pointer"><i class='material-icons'>@item.BUTTON</i></td>
    @*@if (item.NUM_DOC_TEXT == "Edit")
    {
        <td onclick="document.location='@Url.Action("Edit", "Solicitudes", new { id_d = item.NUM_DOC })'" style="cursor:pointer">
            @item.NUM_DOC
        </td>
    }
    else
    {*@
        <td onclick="document.location='@Url.Action("Details", "Solicitudes", new { id = item.NUM_DOC, pais = item.PAIS_ID })'" style="cursor:pointer">
            @item.NUM_DOC
        </td>
    @*}*@
    <td>@item.SOCIEDAD_ID</td>
    <td>@item.PAIS_ID</td>
    <td>@item.FECHAD</td>
    <td>@item.FECHADD</td>
    <td>@item.HORAC</td>
    <td>@item.PERIODO</td>
    <td><span class="@item.ESTATUS_CLASS" data-badge-caption=" ">@item.ESTATUS</span></td>
    <td>@item.PAYER_ID</td>
    <td>@item.CLIENTE</td>
    <td>@item.CANAL</td>
    <td>@item.TSOL</td>
    <td>@item.TALL</td>
    @*<td>@item.CUENTAS</td>*@
    <td>@item.CUENTAP</td>
    <td>@item.CUENTAPL</td>
    <td>@item.CUENTACL</td>
    <td>@item.CONCEPTO</td>
    <td>@item.MONTO_DOC_ML</td>
    <td>@item.FACTURA</td>
    <td>@item.FACTURAK</td>
    <td>@item.USUARIOC_ID</td>
    <td>@item.USUARIOM_ID</td>
    <td>@item.NUM_PRO</td>
    <td>@item.NUM_NC</td>
    <td>@item.NUM_AP</td>
    <td>@item.NUM_REV</td>
    <td>@item.BLART</td>
    <td>@item.NUM_PAYER</td>
    <td>@item.NUM_CLIENTE</td>
    <td>@item.NUM_IMPORTE</td>
    <td>@item.NUM_CUENTA</td>
</tr>
}
                </tbody>
            </table>
        }

        <input id="miles" name="miles" type="hidden" value="@ViewBag.miles">
        <input id="dec" name="dec" type="hidden" value="@ViewBag.dec">
        <script src="~/Scripts/formatos.js"></script><!--RSG 01.08.2018-->
        <iframe id="txtArea1" style="display:none"></iframe>
        <script src="https://cdn.datatables.net/buttons/1.5.2/js/dataTables.buttons.min.js"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/jszip/3.1.3/jszip.min.js"></script>
        <script src="https://cdn.datatables.net/buttons/1.5.2/js/buttons.html5.min.js"></script>
        <script>
    $(document).ready(function () {
        var table2 = $('#table4exc').DataTable({
            //"ajax": 'ViewBag.documentos.Data[0]',
            paging: false,
            //searching: false
            //stateSave: true,
            scrollX: "50vh",
            scrollY: "50vh",
            scrollCollapse: true
        });
        $("#btnExport1").click(function () {
            tableToExcel("table4exc", "solicitudes");
        });

        var table = $('#table').DataTable({
            //"ajax": 'ViewBag.documentos.Data[0]',
            //paging: false,
            //searching: false
            //stateSave: true,
            scrollX: "50vh",
            scrollY: "50vh",
            scrollCollapse: true,
            //language: {
            //    lengthMenu: "Display _MENU_ records per page",
            //    zeroRecords: "No se encontraron datos",
            //    info: "Página _PAGE_ de _PAGES_",
            //    infoEmpty: "No hay datos",
            //    infoFiltered: "(Filtrado de _MAX_ líneas totales)",
            //    search: "Buscar"
            //},
            order: [[4, "desc"], [6, "desc"], [1, "desc"]],
            language: {
                //"url": "//cdn.datatables.net/plug-ins/9dcbecd42ad/i18n/Spanish.json"
                "url": root + "Scripts/lang/@Session["spras"].ToString()"+".json"
            },
            columnDefs: [
                //{
                //    targets: [2, 3, 4, 5, 7, 9],
                //    className: 'mdl-data-table__cell--non-numeric'
                //},
                {
                    "targets": [4],
                    "visible": false,
                    "searchable": false
                }
            ],
            initComplete: function () {
                this.api().columns().every(function () {
                    var column = this;
                    //var div = $('<div class="inputa-field col s12">').appendTo($(column.footer()).empty());
                    var select = $('<select style="display:initial;" class="browser-default"><option value=""></option></select>')
                        //var select = $('<select ><option value=""></option></select>')
                        //.appendTo($(div))
                        .appendTo($(column.footer()).empty())
                        .on('change', function () {
                            var val = $.fn.dataTable.util.escapeRegex(
                                $(this).val()
                            )
                                ;

                            column
                                .search(val ? '^' + val + '$' : '', true, false)
                                .draw();
                        });

                    //column.data().unique().sort().each(function (d, j) {
                    column.cells('', column[0]).render('display').sort().unique().each(function (d, j) {
                        //select.append('<option value="' + d + '">' + d + '</option>')
                        var val = $('<div/>').html(d).text();
                        select.append('<option value="' + val + '">' + val + '</option>');
                    });
                    //var scr = div.append('<script>var elem = document.querySelectorAll("select");var instance = M.FormSelect.init(elem, []);');
                });
            }
        });
        new $.fn.dataTable.Buttons(table, {
            buttons: [{
                extend: 'excelHtml5',
                footer: false,
                className: 'btn-small',
                text: 'Generar Excel',
                exportOptions: {
                    columns: ":not(:eq(0)):visible"
                },
                customize: function (xlsx) {
                    var sheet = xlsx.xl.worksheets['sheet1.xml'];
                    // Loop over the cells in column `C`
                    $('row[r!=1] c[r^="H"]', sheet).each(function () {
                        // Get the value
                        var status = $('is t', this).text();
                        if (status == 'Por contabilizar' || status == 'Registrado SAP' || status == 'Por gen.txt' || status == 'Provisi\u00F3n abierta' || status == 'Reversada') {
                            $(this).attr('s', '15');
                        }
                        else if (status == 'Pendiente reverso' || status == 'Pendiente aprobador') {
                            $(this).attr('s', '5');
                        }
                        else if (status == 'Pendiente firma' || status == 'Pendiente validaci\u00F3n TS') {
                            $(this).attr('s', '20');
                        }
                        else if (status == 'Borrador' || status == 'Pendiente correcci\u00F3n usuario TS' || status == 'Cancelado' || status == 'Error en contabilizaci\u00F3n' || status == 'Pendiente correcci\u00F3n usuario') {
                            $(this).attr('s', '10');
                        }
                    });
                }
            }]
        });
        //table.buttons().container()
        //    .appendTo($('#botones'));
        var a = $('#selecc').val();
        table.page.len(a).draw();
        $('#selecc').on('change', function () {
            table.page.len(this.value).draw();
        });

        $('input.global_filter').on('keyup click', function () {
            filterGlobal();
        });

        $('#table tbody').on('click', 'td.details-control', function () {
            var tr = $(this).closest('tr');
            var row = table.row(tr);

            if (row.child.isShown()) {
                // This row is already open - close it
                row.child.hide();
                tr.removeClass('shown');
            }
            else {
                // Open this row
                var child = format(row.data(), row, tr);
                if (child != undefined) {

                }
            }
        });

    });

    function filterGlobal() {
        $('#table').DataTable().search(
            $('#global_filter').val()).draw();
    }
    function format(d, row, tr) {
        $.ajax({
            url: root+"Listas/Relacionados",
            type: "GET",
            async: false,
            timeout: 30000,
            dataType: "json",
            data: { num_doc: d[1], spras:'@Session["spras"].ToString()' },
            success: function (data) {
                var uu = ($.map(data, function (item) {
                    return { label: item.NUM_DOC, value: item };
                }));
                var ret = "<table class='table mdl-data-table striped'>";
                for (var i = 0; i < uu.length; i++) {
                    var sum = 0;
                    ret += "<tr onclick='link(" + uu[i].value.NUM_DOC + ",'" + uu[i].value.PAIS_ID+"')' style='cursor:pointer'><td>" + uu[i].value.NUM_DOC + "</td><td>" + uu[i].value.TSOL_ID + "</td>";
                    ret += "<td>" + uu[i].value.GALL_ID + "</td>";
                    ret += "<td>" + uu[i].value.ESTADO + "</td>";
                    ret += "<td>" + uu[i].value.CIUDAD.split('.')[0] + "</td>";
                    @*if (uu[i].value.ESTATUS_WF == "R") {
                        uu[i].value.ESTATUS = "red"
                        uu[i].value.ESTATUS_WF = "@foreach (TAT001.Entities.TEXTO t in ViewBag.textos){if(t.CAMPO_ID == "lbl_rejected"){<span>@t.TEXTOS</span>}}";
                    } else if (uu[i].value.ESTATUS_WF == "P") {
                        uu[i].value.ESTATUS = "yellow darken-2"
                    uu[i].value.ESTATUS_WF = "@foreach (TAT001.Entities.TEXTO t in ViewBag.textos){if(t.CAMPO_ID == "lbl_pending"){<span>@t.TEXTOS</span>}}";
                    } else if (uu[i].value.ESTATUS_WF == "A") {
                        uu[i].value.ESTATUS = "green"
                    uu[i].value.ESTATUS_WF = "@foreach (TAT001.Entities.TEXTO t in ViewBag.textos){if(t.CAMPO_ID == "lbl_approved"){<span>@t.TEXTOS</span>}}";
                    }
                    ret += "<td class='" + uu[i].value.ESTATUS + " white-text'>" + uu[i].value.ESTATUS_WF+"</td>";*@
                    ret += "<td>" + uu[i].value.ESTATUS + "</td>";
                    ret += "<td>" + uu[i].value.CONCEPTO + "</td>";
                    ret += "<td>" + parseFloat(uu[i].value.MONTO_DOC_ML).toLocaleString("es-MX", { style: 'currency', currency: 'MXN' }) + "</td>";
                    for (var aa = 0; aa < uu.length; aa++) {
                        sum = sum + uu[aa].value.MONTO_DOC_ML;
                    }
                    ret += "<td>" + parseFloat(sum).toLocaleString("es-MX", { style: 'currency', currency: 'MXN' }) + "</td>";
                    ret += "<td style='width:70%;'></td>";

                    ret += "</tr>";
                }
                ret += "</table>"

                row.child(ret).show();
                tr.addClass('shown');

                return ret;
            },
            error: function (e, ew) {
                alert(e);
            }
        });
    }
            function link(num, pais_id) {
                var paramPais = "";
                if (pais_id != null || pais_id!=""){
                    paramPais = "?pais=" + pais_id;
                }
                document.location = root+"Solicitudes/Details/" + num + paramPais;
            }
            var tableToExcel = (function () {
                var uri = 'data:application/vnd.ms-excel;base64,'
                    , template = '<html xmlns:o="urn:schemas-microsoft-com:office:office" xmlns:x="urn:schemas-microsoft-com:office:excel" xmlns="http://www.w3.org/TR/REC-html40"><meta http-equiv="content-type" content="application/vnd.ms-excel; charset=UTF-8"><head><!--[if gte mso 9]><xml><x:ExcelWorkbook><x:ExcelWorksheets><x:ExcelWorksheet><x:Name>{worksheet}</x:Name><x:WorksheetOptions><x:DisplayGridlines/></x:WorksheetOptions></x:ExcelWorksheet></x:ExcelWorksheets></x:ExcelWorkbook></xml><![endif]--></head><body><table>{table}</table></body></html>'
                    , base64 = function (s) { return window.btoa(unescape(encodeURIComponent(s))) }
                    , format = function (s, c) { return s.replace(/{(\w+)}/g, function (m, p) { return c[p]; }) }
                return function (table, name) {
                    if (!table.nodeType) table = document.getElementById(table)
                    var ctx = { worksheet: name || 'Worksheet', table: table.innerHTML }
                    window.location.href = uri + base64(format(template, ctx))
                }
            })()
        </script>
        <style>
            .dt-buttons {
                display: inline !important;
            }

            .dataTables_length {
                display: none;
            }

            .dataTables_filter {
                display: none;
            }

            .dataTables_scrollHeadInner, .mdl-data-table {
                width: 100%;
            }
        </style>
    </div>
</div>
