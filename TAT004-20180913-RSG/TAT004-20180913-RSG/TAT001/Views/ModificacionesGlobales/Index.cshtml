@model TAT001.Models.ModificacionesGlobalesViewModel
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.pagina_r = 240;
    ViewBag.carpeta_r = 200;
}
<script>
    var root = "@Url.Content("~")";
</script>
<script type="text/javascript" src="~/Scripts/moment.min.js"></script>
<link href="~/Content/autocomplete.css" rel="stylesheet" />
<script src="~/Scripts/autocomplete1.11.4.js"></script>
<div class="card-panel">
    <div class="row">
        <label id="lbl_rango_sol" class="col s2"></label>
        <div class="col s2">
            @Html.EditorFor(model => model.filtros.NUM_DOCI, new { htmlAttributes = new { @maxlength = 20 } })
        </div>
        <div class="col s2">
            @Html.EditorFor(model => model.filtros.NUM_DOCF, new { htmlAttributes = new { @maxlength = 20 } })
        </div>
    </div>
    <div class="row">
        <label id="lbl_rango_fecha" class="col s2"></label>
        <div class="col s2">
            @Html.EditorFor(model => model.filtros.FECHAI, new { htmlAttributes = new { @class = "datepicker" } })
        </div>
        <div class="col s2">
            @Html.EditorFor(model => model.filtros.FECHAF, new { htmlAttributes = new { @class = "datepicker" } })
        </div>
    </div>
    <div class="row">
        <label id="lbl_agente" class="col s2"></label>
        <div class="col s2">
            @Html.EditorFor(model => model.filtros.USUARIO_ID, new { htmlAttributes = new { @maxlength = 20 } })
        </div>
    </div>
    <div class="row">
        <label id="lbl_cliente" class="col s2"></label>
        <div class="col s2">
            @Html.EditorFor(model => model.filtros.KUNNR, new { htmlAttributes = new { @maxlength = 20 } })
        </div>
    </div>
</div>

<script type="text/javascript" src="~/Scripts/fnCommon.js"></script>
<script>
            var spras_id ="@ViewBag.spras_id";
        //---- Inicializador de componentes Materialize----
        fnCommon.materializeInit('datepicker', spras_id);
        fnCommon.materializeInit('select');

        // Remover Fecha y Hora
        var sinFecha = "01/01/0001";
        document.querySelectorAll('.datepicker').forEach(function (datePicker) {
            if (datePicker.value.indexOf(sinFecha)>-1) { datePicker.value = ''; }
        });
        var auto = $.noConflict(true);
        auto(document).ready(function () {
            auto("#filtros_KUNNR").autocomplete({
                source: function (request, response) {
                    fnCommon.autoAjax(root + "Listas/Clientes", response,{ Prefix: request.term }, function (item) { return { label: (item.KUNNR + " - " + item.NAME1), value: item.KUNNR }; });
                },
                messages: {
                    noResults: '',
                    results: function (resultsCount) { }
                },
                select: function (event, ui) {
                    var label = ui.item.label;
                    var value = ui.item.value;
                }
            });
        })
        auto(document).ready(function () {
            auto("#filtros_USUARIO_ID").autocomplete(
                {
                    source: function (request, response) {
                        fnCommon.autoAjax(root + "Listas/Usuarios", response,{ Prefix: request.term }, function (item) { return { label: (item.ID + " - " + item.NOMBRE + " " + item.APELLIDO_P + " " + (item.APELLIDO_M == null ? "" : item.APELLIDO_M)), value: item.ID }; });
                     },
                    messages: {
                        noResults: '',
                        results: function (resultsCount) { }
                    },
                    select: function (event, ui) {
                        var label = ui.item.label;
                        var value = ui.item.value;
                    }
                });
        })
        auto(document).ready(function () {
            auto("#filtros_NUM_DOCI").autocomplete({
                source: function (request, response) {
                    fnCommon.autoAjax(root + "Listas/Solicitudes", response, { Prefix: request.term }, function (item) { return { label: item.NUM_DOC, value: item.NUM_DOC }; });
                },
                messages: {
                    noResults: '',
                    results: function (resultsCount) { }
                },
                select: function (event, ui) {
                    var label = ui.item.label;
                    var value = ui.item.value;
                }
            });
        })
        auto(document).ready(function () {
            auto("#filtros_NUM_DOCF").autocomplete({
                source: function (request, response) {
                    fnCommon.autoAjax(root + "Listas/Solicitudes", response, { Prefix: request.term }, function (item) { return { label: item.NUM_DOC, value: item.NUM_DOC }; });
                },
                messages: {
                    noResults: '',
                    results: function (resultsCount) { }
                },
                select: function (event, ui) {
                    var label = ui.item.label;
                    var value = ui.item.value;
                }
            });
        })
</script>
