@model TAT001.Entities.USUARIO

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.pagina_r = 601;
    ViewBag.carpeta_r = 500;
}


@using (Html.BeginForm())
{
    <script src="~/Scripts/autocomplete1.10.2.js"></script>
    <script src="~/Scripts/autocomplete1.11.4.js"></script>
    <link href="~/Content/autocomplete.css" rel="stylesheet" />
    @Html.AntiForgeryToken()
    <div class="row">
        <div class="col s12 l12 right-align">
            @if ((ViewBag.nivelUsuario == 1 || ViewBag.nivelUsuario == 8) && ViewBag.idUsuario != ViewBag.ID)
            {
                <a class="btn" id="btn_agregarbackup" href="@Url.Action("AddBackup", new { id = Model.ID })"></a>
                <a class="btn" href="@Url.Action("Pass", new { id = Model.ID })">Cambiar contraseña</a>
                <input type="submit" value="Guardar" class="btn" />
            }
            else
            {
                <a class="btn" disabled id="btn_agregarbackup" href="@Url.Action("AddBackup", new { id = Model.ID })"></a>
                <a class="btn" href="@Url.Action("Pass", new { id = Model.ID })">Cambiar contraseña</a>
                <input type="submit" disabled value="Guardar" class="btn" />
            }
        </div>
    </div>
    <div class="row">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ID)
        @Html.HiddenFor(model => model.PASS)
        <div class="col l6 s12">
            <div class="card-panel">
                <div class="row">
                    <div class="input-field col s12">
                        @Html.EditorFor(model => model.ID, new { htmlAttributes = new { @disabled = "disabled" } })
                        @Html.LabelFor(model => model.ID, htmlAttributes: new { @id = "lbl_id" })
                        @Html.ValidationMessageFor(model => model.ID, "", new { @class = "text-danger" })
                    </div>
                    <div class="input-field col s12">
                        @Html.EditorFor(model => model.NOMBRE, new { htmlAttributes = new { @class = "form-control", required = true } })
                        @Html.LabelFor(model => model.NOMBRE, htmlAttributes: new { @id = "lbl_nombre" })
                        @Html.ValidationMessageFor(model => model.NOMBRE, "", new { @class = "text-danger" })
                    </div>
                    <div class="input-field col s12">
                        @Html.EditorFor(model => model.APELLIDO_P, new { htmlAttributes = new { @class = "form-control", required = true } })
                        @Html.LabelFor(model => model.APELLIDO_P, htmlAttributes: new { @id = "lbl_appPat" })
                        @Html.ValidationMessageFor(model => model.APELLIDO_P, "", new { @class = "text-danger" })
                    </div>
                    <div class="input-field col s12">
                        @Html.EditorFor(model => model.APELLIDO_M, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.LabelFor(model => model.APELLIDO_M, htmlAttributes: new { @id = "lbl_appMat" })
                        @Html.ValidationMessageFor(model => model.APELLIDO_M, "", new { @class = "text-danger" })
                    </div>
                    <div class="input-field col s12">
                        @Html.EditorFor(model => model.EMAIL, new { htmlAttributes = new { @type = "email", required = true } })
                        @*@Html.EditorFor(model => model.EMAIL, new { htmlAttributes = new { @class = "form-control" } })*@
                        @Html.LabelFor(model => model.EMAIL, htmlAttributes: new { @id = "lbl_email" })
                        @Html.ValidationMessageFor(model => model.EMAIL, "", new { @class = "text-danger" })
                    </div>
                    <div class="input-field col s6">
                            @Html.DropDownListFor(model => model.SPRAS_ID, (List<SelectListItem>)ViewBag.SPRAS, "")
                            @Html.LabelFor(model => model.SPRAS_ID, htmlAttributes: new { @id = "lbl_spras" })
                    </div>
                </div>
            </div>
        </div>
        <div class="col l6 s12">
            <div class="card-panel">
                <div class="row">
                    <div class="input-field col s12">
                        @Html.EditorFor(model => model.PUESTO_ID, new { htmlAttributes = new { @class = "text", @id = "input_puesto", required = true } })
                        @Html.LabelFor(model => model.PUESTO_ID, htmlAttributes: new { @id = "lbl_puesto" })
                        @Html.ValidationMessageFor(model => model.PUESTO_ID, "", new { @class = "text-danger" })
                    </div>
                        @Html.Hidden("SELECT_SOCIEDADES1", (string)ViewBag.sociedad)
                    <div class="cocodemul">
                        <div class="input-field col s12">

                            <select multiple name="selectcocode" id="selectcocode" class="comcode select_all" required>
                                @try
                                {
                                    foreach (var item in ViewBag.SOCIEDADES)
                                    {
                                        <option id="@item.BUKRS" value="@item.BUKRS">@item.BUKRS</option>
                                    }
                                }
                                catch (Exception)
                                {
                                    <option value="" id="no_opt">No hay opciones</option>
                                }
                            </select>
                            <label id="label_cocode">Co. Code</label>
                        </div>
                    </div>
                </div>
                    </div>
        </div>
        <div class="col l6 s12">
            <div class="card-panel">
                <table>
                    <thead>
                        <tr>
                            <th class="lbl_usrbackup">Usuario Backup</th>
                            <th class="lbl_fechai">Fecha Inicial</th>
                            <th class="lbl_fechaf">Fecha Final</th>
                            <th class="lbl_activo">Activo</th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var i in Model.DELEGARs.OrderByDescending(t => t.FECHAF))
                        {
                            <tr>
                                <td>@i.USUARIOD_ID - @i.USUARIO1.NOMBRE @i.USUARIO1.APELLIDO_P </td>
                                <td>@i.FECHAI.ToShortDateString()</td>
                                <td>@i.FECHAF.ToShortDateString()</td>
                                @if ((bool)i.ACTIVO == true)
                                {
                                    <td style="align-items:center"><i class='material-icons green-text'>check</i></td>}
                                else
                                {
                                    <td style="align-items:center;"><i class='material-icons red-text'>clear</i></td>}
                                <td>
                                    <a href="@Url.Action("EditBackup", new { id = i.USUARIO_ID, idd=i.USUARIOD_ID, fi=i.FECHAI, ff=i.FECHAF })">
                                        <i class='material-icons green-text'>edit</i>
                                    </a>&nbsp
                                    @if (i.ACTIVO)
                                    {
                                        <a href="@Url.Action("DeleteBackup", new { id = i.USUARIO_ID, idd = i.USUARIOD_ID, fi = i.FECHAI, ff = i.FECHAF })">
                                            <i class='material-icons red-text'>delete</i>
                                        </a>}
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    //OCG 11/10/18 Validacion de email
    <script>
        var root = "@Url.Content("~")";

        //--Asignar Sociedades
        var sociedad = $("#SELECT_SOCIEDADES1").val();
        if (sociedad != null) {
            var jsval = $.parseJSON(sociedad);
            for (var i = 0; i < jsval.length; i++) {
                var ids = "#selectcocode #" + jsval[i] + "";
                $(ids).prop('selected', true);
            }
        }

         //--Inicializar combos
        var elem = document.querySelectorAll('select');
        var options = [];
        var instance = M.FormSelect.init(elem, options);

        var admin = "@ViewBag.admin";
        var flujos = "@ViewBag.flujo";
       
        if (admin == "no") {
            $("#selectcocode").attr("readonly", "readonly");
            var elem = document.querySelectorAll('select');
            var instance = M.FormSelect.init(elem, []);
        }

        if (flujos == "no") {
            $("#input_puesto").attr("readonly", "readonly");
        }

        $("#input_puesto").attr("type", "text");

        $('#EMAIL').on("focusout", function () {
                        var email = $('#EMAIL').val();
            $('#EMAIL').removeClass("valid");
            $('#EMAIL').removeClass("invalid");
                        if (validateEmail(email) == true) {
                $('#EMAIL').addClass("valid");
                        }
                        else {
                $('#EMAIL').addClass("invalid");
                        }
                    });

                    function validateEmail(email) {
                        var re = /^(([^<>()\[\]\\.,;:\s@@"]+(\.[^<>()\[\]\\.,;:\s@@"]+)*)|(".+"))@@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
            return re.test(String(email).toLowerCase());
        }

     

      
        var auto = $.noConflict();
        $('body').on('keydown.autocomplete', '#input_puesto', function () {

            auto(this).autocomplete({
            source: function (request, response) {
                    auto.ajax({
                    type: "POST",
                        url: root +'Usuarios/Nivel',
                        dataType: "json",
                        data: { "Prefix": request.term },
                        success: function (data) {
                            response(auto.map(data, function (item) {
                                return { label: item.ID + " | " + item.TEXTO, value: item.ID };
                            }))
                        }
                    })
                },

                messages: {
                noResults: '',
                    results: function (resultsCount) { }
                },

                change: function (e, ui) {
                    if (!(ui.item)) {
                        e.target.value = "";
                    }
                },

                select: function (event, ui) {
                }
            });
        });

    </script>
}

<div>
    @if (ViewBag.nivelUsuario == 1 || ViewBag.nivelUsuario == 8)
    {
        @Html.ActionLink("Regresar", "Index", null, new { id = "lbl_regresar" })
    }
    else
    {
        @Html.ActionLink("Regresar", "Index", "Home", null, new { id = "lbl_regresar" })
    }
</div>
@if (ViewBag.Error != null)
{
    <script>
            M.toast({ html: '@ViewBag.Error', classes: 'red' });
    </script>
}
